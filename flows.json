[
    {
        "id": "8475ab9.3d26058",
        "type": "tab",
        "label": "Web App Socket Router",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a858ad3a.95706",
        "type": "tab",
        "label": "Web Launchers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9c854ea3.68416",
        "type": "tab",
        "label": "Web Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e17f7487.2a78e8",
        "type": "tab",
        "label": "dataLogger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "90f83725.6dae08",
        "type": "tab",
        "label": "Utility Apps",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "fcfe7ca7.f566a",
        "type": "subflow",
        "name": "Core CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ba2c1c11.88703"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "ba2c1c11.88703",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e3c68b88.d82258",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2c5d25cb.3428ca",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7eddf0fe.4ce23",
        "type": "subflow",
        "name": "Core NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d08de07e.32d22"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "d08de07e.32d22",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f22a539a.a67b3",
        "type": "subflow",
        "name": "Core HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "e4d36fde.932ed"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8341090a.df9758",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "966e270e.701e48"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e13648d6.d698c8",
        "type": "subflow",
        "name": "Log Setting",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "347f36fe.94ed7a"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "df70f6f.9e4ed08",
        "type": "subflow",
        "name": "Scalar Device Menu",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 0,
                "y": 80,
                "wires": [
                    {
                        "id": "ddfc02aa.3af39"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 80,
                "wires": [
                    {
                        "id": "e98d4d33.bcca2",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Chill Detector",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "84d80994.260508",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "9cd5ff5e.caf86",
        "type": "mongodb3",
        "z": "",
        "uri": "$(MONGODBIP)",
        "name": "blinky-lite",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "6acefdd9.69f124",
        "type": "JsonWebToken_config",
        "z": "",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "47794345.2e8b8c",
        "type": "websocket-listener",
        "z": "",
        "path": "/access-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "fcd0f0f1.e1a0f",
        "type": "websocket-listener",
        "z": "",
        "path": "/settings-log/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84a0efe3.385ca",
        "type": "websocket-listener",
        "z": "",
        "path": "/setServerTime/websocket",
        "wholemsg": "false"
    },
    {
        "id": "73ec76d9.becae8",
        "type": "websocket-listener",
        "z": "",
        "path": "/rfct/websocket",
        "wholemsg": "false"
    },
    {
        "id": "c29a3d27.9bd56",
        "type": "websocket-listener",
        "z": "",
        "path": "/oo-display/websocket",
        "wholemsg": "false"
    },
    {
        "id": "522ee5c7.5fbe7c",
        "type": "websocket-listener",
        "z": "",
        "path": "/oo-spec/websocket",
        "wholemsg": "false"
    },
    {
        "id": "df8b76c8.6474b8",
        "type": "websocket-listener",
        "z": "",
        "path": "/mode-0-damper/websocket",
        "wholemsg": "false"
    },
    {
        "id": "7efb4916.1a4cc8",
        "type": "websocket-listener",
        "z": "",
        "path": "/rfill/websocket",
        "wholemsg": "false"
    },
    {
        "id": "72c58cab.a3c494",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check Archive interval",
        "func": "msg.device.lastArchive = msg.payload.lastArchive;\nmsg.device.timeStamp = new Date().getTime();\nvar keys = Object.keys(msg.device);\nfor (var ii = 0; ii < keys.length; ++ii) msg.payload[keys[ii]] = msg.device[keys[ii]];\n\nvar archiveMsg = null;\nif ((msg.payload.timeStamp - msg.payload.lastArchive) > msg.payload.arcPeriod)\n{\n    msg.payload.lastArchive  = msg.payload.timeStamp;\n    msg.device.lastArchive = msg.payload.lastArchive;\n    var archiveDevice = JSON.parse(JSON.stringify(msg.device));\n    delete archiveDevice.arcPeriod;\n    delete archiveDevice.lastArchive;\n    keys = Object.keys(archiveDevice);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (archiveDevice[keys[ii]].hasOwnProperty('type'))\n        {\n            \n            archiveDevice[keys[ii]] = JSON.parse(JSON.stringify(msg.device[keys[ii]].value));\n        }\n    }\n    archiveMsg = {topic:'archiveData',payload: archiveDevice};\n}\nvar updateDeviceMsg = \n{\n    topic:'updateDevice',\n    payload:\n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        msg.payload\n    ]\n};\nreturn [updateDeviceMsg,archiveMsg];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 920,
        "y": 160,
        "wires": [
            [
                "bc2507b7.46f4b8"
            ],
            [
                "621ab8d1.42e078"
            ]
        ]
    },
    {
        "id": "8a439be9.030ab8",
        "type": "subflow:ca529822.9112f8",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "e020461d.044ee8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check if Device Exists",
        "func": "function isEmpty(obj) \n{\n    for(var key in obj) \n    {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\nif (isEmpty(msg.payload)) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 160,
        "wires": [
            [
                "4e3763f1.63282c"
            ]
        ]
    },
    {
        "id": "731fcbcd.96f0a4",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "e020461d.044ee8"
            ]
        ]
    },
    {
        "id": "bc2507b7.46f4b8",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "update",
        "x": 1150,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "621ab8d1.42e078",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "insertOne",
        "x": 1160,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ddfc02aa.3af39",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript.scalardevicemenu",
        "field": "payload.javascript.scalardevicemenu",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var numTraces = 4;\n        var deviceSelect = [];\n        var nameSelect = [];\n        var propSelect=[];\n        var attrSelect=[];\n        var valSelect=[];\n        var devInfo = [];\n        var permitGetDeviceValues = true;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                deviceSelect[itrace] = document.getElementById('deviceSelect' + itrace.toString());\n                nameSelect[itrace] = document.getElementById('nameSelect' + itrace.toString());\n                propSelect[itrace] = document.getElementById('propSelect' + itrace.toString());\n                attrSelect[itrace] = document.getElementById('attrSelect' + itrace.toString());\n                valSelect[itrace] = document.getElementById('valSelect' + itrace.toString());\n                devInfo[itrace] = {deviceType: '', name : '',  prop : '',attr : '',device : {}, axis:'y1', pts:false};\n                $('#unitSelect'+ itrace.toString()).html('');\n            }\n            setInterval(getDeviceValues, 1000);\n            onDocumentReadySpecial();\n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getDeviceList':\n                        loadDeviceList(msg.payload);\n                        break;\n                    case 'getNameList':\n                        loadNameList(msg);\n                        break;\n                    case 'getAttrList':\n                        loadAttrList(msg);\n                        break;\n                    case 'getDeviceValues':\n                        loadDeviceValues(msg);\n                        break;\n                    default:\n                        onWebSocketMessageSpecial(msg);\n                }\n            }\n         }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject({topic : 'getDeviceList',payload : {}, 'userID' : userID,});\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function loadDeviceList(deviceList)\n        {\n            deviceList.sort();\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                for (var ii = 0; ii < deviceList.length; ++ii)\n                {\n                    var opt = document.createElement('option');\n                    opt.value = deviceList[ii];\n                    opt.innerHTML = deviceList[ii];\n                    deviceSelect[itrace].appendChild(opt);\n                }\n            }\n        }\n        function loadNameList(data)\n        {\n            data.nameList.sort();\n            for (var ii = 0; ii < data.nameList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.nameList[ii];\n                opt.innerHTML = data.nameList[ii];\n                nameSelect[data.trace].appendChild(opt);\n            }\n\n            return;\n        }\n        function loadAttrList(data)\n        {\n            data.attrList.sort();\n            for (var ii = 0; ii < data.attrList.length; ++ii)\n            {\n                var opt = document.createElement('option');\n                opt.value = data.attrList[ii];\n                opt.innerHTML = data.attrList[ii];\n                attrSelect[data.trace].appendChild(opt);\n            }\n        }\n        function deviceSelected(itrace)\n        {\n            clearNameOptionList(itrace);\n            if (deviceSelect[itrace].value == 'notSelected') return;\n            nameSelect[itrace].value = 'notSelected';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getNameList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                });\n        }\n        function nameSelected(itrace)\n        {\n            clearPropOptionList(itrace);\n            if (nameSelect[itrace].value == 'notSelected') return;\n            var readOpt = document.createElement('option');\n            readOpt.value = 'reading';\n            readOpt.innerHTML = 'reading';\n            propSelect[itrace].appendChild(readOpt);\n            var setOpt = document.createElement('option');\n            setOpt.value = 'setting';\n            setOpt.innerHTML = 'setting';\n            propSelect[itrace].appendChild(setOpt);\n            \n            propSelect[itrace].value = 'notSelected';\n        }\n        function propSelected(itrace)\n        {\n            clearAttrOptionList(itrace);\n            if (propSelect[itrace].value == 'notSelected') return;\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAttrList',\n                    userID      : userID,\n                    trace       : itrace,\n                    deviceType  : deviceSelect[itrace].value,\n                    name        : nameSelect[itrace].value,\n                    prop        : propSelect[itrace].value\n                });\n        }\n        function attrSelected(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n            if (attrSelect[itrace].value == 'notSelected') \n            {\n                $('#valueSelect' + itrace.toString()).html('');\n                $('#unitSelect' + itrace.toString()).html('');\n                $('#editDeviceButton'+ itrace.toString()).hide();\n\n                return;\n            }\n            devInfo[itrace].deviceType = deviceSelect[itrace].value;\n            devInfo[itrace].name = nameSelect[itrace].value;\n            devInfo[itrace].prop = propSelect[itrace].value;\n            devInfo[itrace].attr = attrSelect[itrace].value;\n            attrSelectedSpecial(itrace);\n\n        }\n        function clearNameOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (nameSelect[itrace].firstChild)\n            {\n                nameSelect[itrace].removeChild(nameSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            nameSelect[itrace].appendChild(opt);\n            clearPropOptionList(itrace);\n        }\n        function clearPropOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (propSelect[itrace].firstChild)\n            {\n                propSelect[itrace].removeChild(propSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            propSelect[itrace].appendChild(opt);\n            clearAttrOptionList(itrace);\n        }\n        function clearAttrOptionList(itrace)\n        {\n            devInfo[itrace].deviceType = '';\n            devInfo[itrace].name = '';\n            devInfo[itrace].prop = '';\n            devInfo[itrace].attr = '';\n            devInfo[itrace].device = {};\n\n            while (attrSelect[itrace].firstChild)\n            {\n                attrSelect[itrace].removeChild(attrSelect[itrace].firstChild);\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            attrSelect[itrace].appendChild(opt);\n            $('#unitSelect'+ itrace.toString()).html('');\n            $('#valueSelect' + itrace.toString()).html('');\n            clearAttrOptionListSpecial(itrace);\n        }\n        function getDeviceValues()\n        {\n            var devList = [];\n            var traceCount = 0;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if ((devInfo[itrace].deviceType.length > 0) && (devInfo[itrace].name.length > 0)) \n                {\n                    devList[traceCount] = { $and: [ {deviceType : devInfo[itrace].deviceType}, {name : devInfo[itrace].name}]};\n                    ++traceCount;\n                }\n            }\n            if (traceCount < 1) return;\n            var queryFilter = { $or: devList };\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getDeviceValues',\n                    userID      : userID,\n                    queryFilter : queryFilter,\n                });\n \n        }\n        function loadDeviceValues(data)\n        {\n            if (!permitGetDeviceValues) return;\n            var devices = data.devices;\n            for (var itrace = 0; itrace < numTraces; ++itrace)\n            {\n                if (devInfo[itrace].attr.length > 0)\n                {\n                    for (idev = 0; idev < devices.length; ++idev)\n                    {\n                        if (devices[idev].deviceType == devInfo[itrace].deviceType)\n                        {\n                            if(devices[idev].name == devInfo[itrace].name)\n                            {\n                                devInfo[itrace].device = devices[idev];\n                                var attr = devInfo[itrace].device[devInfo[itrace].attr];\n                                var valueColor = 'black';\n                                if (attr.alarm.value > 0) valueColor = 'orange';\n                                if (attr.alarm.value > 2) valueColor = 'red';\n                                $('#valueSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#valueSelect' + itrace.toString()).html(attr.value.toString());\n                                $('#unitSelect' + itrace.toString()).css(\"color\", valueColor);\n                                $('#unitSelect' + itrace.toString()).html(attr.unit);\n                            }\n                        }\n                    } \n                }\n            }\n            loadDeviceValuesSpecial(data);\n        }\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e98d4d33.bcca2"
            ]
        ]
    },
    {
        "id": "3d10ca38.1dd0d6",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "f2a0c42e.7c1d68",
        "type": "mqtt out",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "84d80994.260508",
        "x": 680,
        "y": 1980,
        "wires": []
    },
    {
        "id": "ba2c1c11.88703",
        "type": "template",
        "z": "fcfe7ca7.f566a",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #434170;\n          --color2: #575491;\n          --color3: #9f9dc7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color:var(--white);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: var(--color3);\n        }\n        .card-button\n        {\n          color: var(--color5);\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: white;\n          background-color: var(--color3);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n        .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        div.ui-datepicker\n        {\n            font-size:30px;\n        }",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e4d36fde.932ed",
        "type": "subflow:fcfe7ca7.f566a",
        "z": "f22a539a.a67b3",
        "name": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "c8d8e93c.2234a8"
            ]
        ]
    },
    {
        "id": "f5a9eda8.5c5bc",
        "type": "template",
        "z": "e3c68b88.d82258",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #434170;\n          --color2: #575491;\n          --color3: #9f9dc7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n       .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger \n        { \n            transform: scale(3); \n            margin: 1px;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "966e270e.701e48",
        "type": "subflow:e3c68b88.d82258",
        "z": "8341090a.df9758",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "899d0666.97b868"
            ]
        ]
    },
    {
        "id": "9460eaf0.da7628",
        "type": "subflow:ca529822.9112f8",
        "z": "8341090a.df9758",
        "name": "",
        "x": 620,
        "y": 80,
        "wires": []
    },
    {
        "id": "c104210d.418eb",
        "type": "template",
        "z": "2c5d25cb.3428ca",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/MAX-IVYellow.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d08de07e.32d22",
        "type": "template",
        "z": "7eddf0fe.4ce23",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/MAX-IVYellow.png\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">{{{payload.title}}}</h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/core'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "899d0666.97b868",
        "type": "subflow:2c5d25cb.3428ca",
        "z": "8341090a.df9758",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "9460eaf0.da7628"
            ]
        ]
    },
    {
        "id": "c8d8e93c.2234a8",
        "type": "subflow:7eddf0fe.4ce23",
        "z": "f22a539a.a67b3",
        "x": 430,
        "y": 80,
        "wires": [
            [
                "8a439be9.030ab8"
            ]
        ]
    },
    {
        "id": "45a7d04b.f97db",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 540,
        "wires": [
            [
                "908d7fde.10525"
            ]
        ]
    },
    {
        "id": "f62ae826.1bfb58",
        "type": "mqtt in",
        "z": "8475ab9.3d26058",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "ebb8ce.0c3d873"
            ]
        ]
    },
    {
        "id": "ebb8ce.0c3d873",
        "type": "json",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "764116fd.f6e648"
            ]
        ]
    },
    {
        "id": "81c39fe.b208a6",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.mqttDevice.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rfct",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "osc-over",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mode-0-damper",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 790,
        "y": 120,
        "wires": [
            [
                "29f3aee5.102672"
            ],
            [
                "9d4bada0.71b3b"
            ],
            [
                "48e2cd50.db32a4"
            ]
        ]
    },
    {
        "id": "764116fd.f6e648",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Check System Sync and Split MQTT topic",
        "func": "if (!global.get('systemClockSynchronized')) return null;\nvar mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 120,
        "wires": [
            [
                "81c39fe.b208a6"
            ]
        ]
    },
    {
        "id": "908d7fde.10525",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getArchive",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getJwtToken",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 510,
        "y": 540,
        "wires": [
            [
                "b6b8b063.9f62f"
            ],
            [
                "d7ff72cc.e5057"
            ],
            [
                "66a788b4.e432a8"
            ]
        ]
    },
    {
        "id": "d7ff72cc.e5057",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    token   : msg.payload.token, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "1f59a828.f68858"
            ]
        ]
    },
    {
        "id": "66a788b4.e432a8",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "CheckLogin",
        "func": "if (global.get('settingsPassword') == 'NULL')\n{\n    return [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];    \n}\nif (msg.payload.payload.loginPassword != global.get('settingsPassword'))\n{\n    return [{topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.payload.userID, token: null}}, null];\n}\nreturn [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];",
        "outputs": 2,
        "noerr": 0,
        "x": 650,
        "y": 560,
        "wires": [
            [
                "439b1d51.6f5e64"
            ],
            [
                "f94738e9.41b828"
            ]
        ]
    },
    {
        "id": "f94738e9.41b828",
        "type": "JsonWebToken",
        "z": "8475ab9.3d26058",
        "name": "get Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 840,
        "y": 640,
        "wires": [
            [
                "e6482ef3.6b5a9"
            ]
        ]
    },
    {
        "id": "e6482ef3.6b5a9",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Send Token",
        "func": "return {topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.userID, token: msg.token}};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 640,
        "wires": [
            [
                "439b1d51.6f5e64"
            ]
        ]
    },
    {
        "id": "439b1d51.6f5e64",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "App Check Login",
        "links": [
            "1f0085b9.7f119a",
            "3013c7d6.60d5c8",
            "3bafbb0a.bd3834",
            "57b5cf9f.28bfe",
            "674b3b5a.aec814",
            "9f60a321.63e3e",
            "c7035bb0.5180c8",
            "d3dc9d67.964e9",
            "de2f9b8c.84e9c8",
            "e2b0f63e.4d6a78",
            "eaaeb3a0.492f1",
            "27576935.b589d6",
            "7e343bf8.8fec14",
            "762e5ad6.d1beb4",
            "f2d4dfb2.28205"
        ],
        "x": 1175,
        "y": 620,
        "wires": []
    },
    {
        "id": "1f59a828.f68858",
        "type": "JsonWebToken",
        "z": "8475ab9.3d26058",
        "name": "decrypt Token",
        "tokenconfig": "6acefdd9.69f124",
        "x": 860,
        "y": 520,
        "wires": [
            [
                "3506b658.01b13a"
            ]
        ]
    },
    {
        "id": "3506b658.01b13a",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Check Token",
        "func": "if (Number(msg.token) == msg.userID)\n{\n    return [msg, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Success!', userID : msg.userID}}]\n}\nreturn [null, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Bad token', userID : msg.userID}}];",
        "outputs": 2,
        "noerr": 0,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "ee0ee61b.770a18",
                "2132a017.ba23f"
            ],
            [
                "439b1d51.6f5e64"
            ]
        ]
    },
    {
        "id": "2132a017.ba23f",
        "type": "mqtt out",
        "z": "8475ab9.3d26058",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 1240,
        "y": 500,
        "wires": []
    },
    {
        "id": "347f36fe.94ed7a",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "Setup accessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n    } \n};\nvar queryFilter = \n{\n    userID: msg.userID\n}\nvar settingLogEntry = {topic:msg.topic, userID: msg.userID, device:msg.payload, timeStamp: new Date().getTime()};\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    payload         : [queryFilter, projectionFilter],\n    settingLogEntry : settingLogEntry\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 160,
        "wires": [
            [
                "e24c42fb.5b61a"
            ]
        ]
    },
    {
        "id": "e24c42fb.5b61a",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findOne",
        "x": 500,
        "y": 160,
        "wires": [
            [
                "c006fe2c.abbb1"
            ]
        ]
    },
    {
        "id": "c006fe2c.abbb1",
        "type": "function",
        "z": "e13648d6.d698c8",
        "name": "setup settingLogEntry",
        "func": "var settingLogEntry = \n{\n    topic       :   msg.settingLogEntry.topic, \n    userID      :   msg.settingLogEntry.userID,\n    device      :   msg.settingLogEntry.device,\n    timeStamp   :   msg.settingLogEntry.timeStamp,\n    ipInfo      :   msg.payload\n}\nreturn {topic: 'settingLogEntry', payload: settingLogEntry};",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "9c60f57c.b85078"
            ]
        ]
    },
    {
        "id": "9c60f57c.b85078",
        "type": "mongodb3 in",
        "z": "e13648d6.d698c8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "insertOne",
        "x": 990,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ee0ee61b.770a18",
        "type": "subflow:e13648d6.d698c8",
        "z": "8475ab9.3d26058",
        "x": 1250,
        "y": 560,
        "wires": []
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"loginDialog\" title=\"Login\" class='card'>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\"><span class=\"tableText\">Password</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control tableText\" id=\"loginPassword\" type=\"password\" value=\"\" /></td>\n                </tr>\n           </table>\n        </div>\n    </div>    \n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            if (!webSocketConnected())\n            {\n                console.log(\"Reconnecting WebSocket\");\n                wsConnectC();\n                setTimeout(function(){ ws.send(JSON.stringify(message)); }, 2000);\n            }\n            else\n            {\n                ws.send(JSON.stringify(message));\n            }\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            loginDialog(\"close\");\n//            userID  = getRandomInt(32768);\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n            if ({{{payload.setServerTimeFlag}}})\n            {\n                var windowLocation = window.location.href\n                if (window.location.href.indexOf('/setServerTime') < 0) \n                {\n                    window.location.replace('/setServerTime?parentRef=' + windowLocation);\n                }\n            }\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        var jwtToken = '';\n        var loginCallback = null;\n        var loginCallbackInfo = null;\n        function checkLogin(callback, callbackInfo)\n        {\n            if (jwtToken.length > 0) return callback(callbackInfo);\n            loginDialog(\"open\", callback, callbackInfo);\n        }\n        function loadJwtToken(data)\n        {\n            if (data.token == null)\n            {\n                acknowledgeDialog('Error', 'Login', 'Denied');\n            }\n            else\n            {\n                jwtToken = data.token;\n                loginCallback(loginCallbackInfo);\n            }\n        }\n        function loginDialog(action, callback, callbackInfo) \n        {\n            $( \"#loginDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Login\",\n                            click: function() \n                            {\n                                var tokenMsg = \n                                {\n                                    topic       : 'getJwtToken',\n                                    payload     : \n                                    {\n//                                        loginUser       : $('#loginUser').val(),\n                                        loginPassword   : $('#loginPassword').val()\n                                    },\n                                    'userID'    : userID,\n                                };                               \n                                if (!webSocketConnected())\n                                {\n                                    console.log(\"Reconnecting WebSocket\");\n                                    wsConnectC();\n                                    setTimeout(function(){ ws.send(JSON.stringify(tokenMsg)); }, 2000);\n                                }\n                                else\n                                {\n                                    ws.send(JSON.stringify(tokenMsg));\n                                }\n                                ws.send(JSON.stringify(tokenMsg));\n                                loginCallback = callback;\n                                loginCallbackInfo = callbackInfo;\n                                $( this ).dialog( \"close\" );\n                            },\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n            $( \"#loginDialog\" ).dialog(action);\n        }\n        function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                token       : jwtToken,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, token : jwtToken, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['projectname'] = global.get('projectName')\nmsg.payload['userID'] = getRandomInt(32768);\nmsg.payload['setServerTimeFlag'] = !global.get('systemClockSynchronized');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "e87e796a.685178",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        node.warn('Booger');\n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f",
                "fe4fcd1f.16e39"
            ]
        ]
    },
    {
        "id": "fe4fcd1f.16e39",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "ClientInfo",
        "func": "var ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nvar url = msg.req.url;\nreturn {\n    topic:'clientInfo', \n    payload:{\n        ipAddress   : ipAddress\n    },\n    extraInfo       : {url:url, userID:msg.payload.userID},\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 100,
        "wires": [
            [
                "8382c3d.0aeea4"
            ]
        ]
    },
    {
        "id": "8382c3d.0aeea4",
        "type": "http request",
        "z": "ca529822.9112f8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://tools.keycdn.com/geo.json?host={{{payload.ipAddress}}}",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1130,
        "y": 140,
        "wires": [
            [
                "d0cd3f7.e986fc"
            ]
        ]
    },
    {
        "id": "d0cd3f7.e986fc",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "parseIpRequest",
        "func": "var data = msg.payload.data.geo;\ndata['url'] = msg.extraInfo.url;\ndata['userID'] = msg.extraInfo.userID;\ndata['timeStamp'] = new Date().getTime();\nreturn {topic:'ipData', payload:data};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "b7f38426.fa6658"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "e87e796a.685178"
            ]
        ]
    },
    {
        "id": "b7f38426.fa6658",
        "type": "mongodb3 in",
        "z": "ca529822.9112f8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "insertOne",
        "x": 1190,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2666eb47.cb2c24",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/access-log",
        "url": "/access-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "3836124.ae654ee"
            ]
        ]
    },
    {
        "id": "c41bff2c.e8b63",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='accessLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%'>url</th>\n                            <th width='10%'>ip</th>\n                            <th width='7%' >country</th>\n                            <th width='6%' >region</th>\n                            <th width='7%' >city</th>\n                            <th width='20%'>rdns</th>\n                            <th width='10%'>isp</th>\n                            <th width='10%'>timezone</th>\n                            <th width='10%'>datetime</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"accessLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "56402369.244bec"
            ]
        ]
    },
    {
        "id": "56402369.244bec",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Access Log",
        "output": "str",
        "x": 550,
        "y": 120,
        "wires": [
            [
                "e4c1258f.54e248"
            ]
        ]
    },
    {
        "id": "3836124.ae654ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getAccessLog':\n                        displayData(msg);\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            $(\"#accessLogTableBody\").remove();\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getAccessLog',\n                    userID      : userID,\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                });\n            \n        }\n        function displayData(msg)\n        {\n            var markup = '<tbody id=\"accessLogTableBody\">';\n            for (var ii = 0; ii < msg.payload.length; ++ii)\n            {\n                markup = markup + addRow(msg.payload[ii]);\n            }\n            markup = markup + '</tbody>';\n            $(\"#accessLogTable\").append(markup);\n        }\n\n        function addRow(record)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + record.url + '</td>';\n            markup = markup + '<td>' + record.ip + '</td>';\n            markup = markup + '<td>' + record.country + '</td>';\n            markup = markup + '<td>' + record.region + '</td>';\n            markup = markup + '<td>' + record.city + '</td>';\n            markup = markup + '<td>' + record.rdns + '</td>';\n            markup = markup + '<td>' + record.isp + '</td>';\n            markup = markup + '<td>' + record.timezone + '</td>';\n            markup = markup + '<td>' + record.datetime + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n",
        "output": "str",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "c41bff2c.e8b63"
            ]
        ]
    },
    {
        "id": "47b50e0.c7354f4",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "adfb1983.8d4b08"
            ]
        ]
    },
    {
        "id": "adfb1983.8d4b08",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 200,
        "wires": [
            [
                "b9aba820.9dbf78"
            ]
        ]
    },
    {
        "id": "b9aba820.9dbf78",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getAccessLog',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "aef63175.9e1f7"
            ]
        ]
    },
    {
        "id": "aef63175.9e1f7",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "find.toArray",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "c60d9fa2.da0d4"
            ]
        ]
    },
    {
        "id": "c60d9fa2.da0d4",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getAccessLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getAccessLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "7a08c826.6c9ca8"
            ]
        ]
    },
    {
        "id": "7a08c826.6c9ca8",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/access-log/websocket",
        "server": "47794345.2e8b8c",
        "client": "",
        "x": 1240,
        "y": 200,
        "wires": []
    },
    {
        "id": "7db6e983.ea0948",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/settings-log",
        "url": "/settings-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "3ff05971.6144b6"
            ]
        ]
    },
    {
        "id": "207a1450.67f23c",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td align=\"center\">\n                            <span>Start Date</span>\n                        </td>\n                        <td align=\"center\">\n                            <span>Stop Date</span>\n                        </td>\n                        <td align=\"center\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n                <table width='100%' id='settingsLogTable'>\n                    <thead>\n                        <tr>\n                            <th width='10%' >url</th>\n                            <th width='10%' >device</th>\n                            <th width='10%' >ip</th>\n                            <th width='7%'  >country</th>\n                            <th width='6%'  >region</th>\n                            <th width='7%'  >city</th>\n                            <th width='20%' >rdns</th>\n                            <th width='10%' >isp</th>\n                            <th width='10%' >timezone</th>\n                            <th width='10%' >datetime</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"settingsLogTableBody\"></tbody>\n                </table>\n            </div>\n       </div>\n   </div>\n    <div id=\"showDeviceDialog\" title=\"Device\" class='card'>\n        <p class='card-title' id='showDeviceDialogName'>Device</p>\n        <div class='card-body'>\n            <table id='showDeviceTable' width='100%'>\n                <thead>\n                    <tr>\n                        <th width='50%' >Attribute</th>\n                        <th width='50%' >Value</th>\n                    </tr>\n                </thead>\n                <tbody id=\"showDeviceTableBody\"></tbody>\n            </table>\n        </div>\n    </div>  ",
        "output": "str",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "c3c60f3c.51f22"
            ]
        ]
    },
    {
        "id": "c3c60f3c.51f22",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Settings Log",
        "output": "str",
        "x": 550,
        "y": 280,
        "wires": [
            [
                "1f057b8c.e3a574"
            ]
        ]
    },
    {
        "id": "78d16800.4adc18",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "61089c8b.87fe94"
            ]
        ]
    },
    {
        "id": "61089c8b.87fe94",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "8d3e512a.420f"
            ]
        ]
    },
    {
        "id": "8d3e512a.420f",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Setup AccessLog Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id : 0, \n    } \n};\nvar queryFilter = \n{\n    timeStamp :\n    {\n        $gte: msg.payload.startDate,\n        $lte: msg.payload.stopDate\n    }\n}\nvar newMsg = \n{\n    topic           : 'getSettingsLog',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "ce493245.30ca8"
            ]
        ]
    },
    {
        "id": "ce493245.30ca8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "find.toArray",
        "x": 780,
        "y": 360,
        "wires": [
            [
                "e1eb29b.c5c23d8"
            ]
        ]
    },
    {
        "id": "e1eb29b.c5c23d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.name,\n        payload:{\n            topic           : 'getSettingsLog',\n            payload         : null,\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\n\nreturn {\n    payload:{\n        topic           : 'getSettingsLog',\n        payload         : records,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "89be3294.49e69"
            ]
        ]
    },
    {
        "id": "89be3294.49e69",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/settings-log/websocket",
        "server": "fcd0f0f1.e1a0f",
        "client": "",
        "x": 1250,
        "y": 360,
        "wires": []
    },
    {
        "id": "3ff05971.6144b6",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var settingsHistory = null;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            var now = new Date();\n            console.log(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( \"#stopDate\" ).val(now.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getSettingsLog':\n                        settingsHistory = msg.payload;\n                        displayData();\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function getData()\n        {\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            var stopDate = new Date($( \"#stopDate\" ).val()).getTime();\n            settingsHistory = null;\n            $(\"#settingsLogTableBody\").remove();\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getSettingsLog',\n                    userID      : userID,\n                    startDate   : startDate,\n                    stopDate    : stopDate,\n                });\n            \n        }\n        function displayData()\n        {\n            var markup = '<tbody id=\"settingsLogTableBody\">';\n            for (var ii = 0; ii < settingsHistory.length; ++ii)\n            {\n                markup = markup + addRow(ii);\n            }\n            markup = markup + '</tbody>';\n            $(\"#settingsLogTable\").append(markup);\n        }\n\n        function addRow(ii)\n        {\n            var markup = '<tr>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.url + '</td>';\n            markup = markup + '<td>' \n                +  '<button onclick=\"displayDevice(' + ii.toString() + ')\">' + settingsHistory[ii].device.deviceType  + '-' + settingsHistory[ii].device.name + '</button>' \n                + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.ip + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.country + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.region + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.city + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.rdns + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.isp + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.timezone + '</td>';\n            markup = markup + '<td>' + settingsHistory[ii].ipInfo.datetime + '</td>';\n            markup = markup + '</tr>';\n            return markup;\n            \n        }\n        function displayDevice(index)\n        {\n            var actionArray = [];\n            var attrList = [];\n            var keys = Object.keys(settingsHistory[index].device);\n            for (var ii = 0; ii < keys.length; ++ii)\n            {\n                if (settingsHistory[index].device[keys[ii]].hasOwnProperty('type'))\n                {\n                    if (settingsHistory[index].device[keys[ii]].type == 'scalar')\n                    {\n                        if (settingsHistory[index].device[keys[ii]].action == 'setting')\n                        {\n                            actionArray.push(settingsHistory[index].device[keys[ii]]);\n                            attrList.push(keys[ii]);\n                        }\n                    }\n                }\n            }\n\n            var time = new Date(settingsHistory[index].timeStamp).toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', '');\n\n            $( \"#showDeviceDialogName\" ).html(settingsHistory[index].device.name + ' ' + time);\n            $( \"#showDeviceTableBody\" ).remove();\n            var markup = '<tbody id=\"showDeviceTableBody\">';\n\n            for (var ii = 0; ii < actionArray.length; ++ii)\n            {\n                markup = markup +'<tr>';\n                markup = markup + '<td align=\"left\">' + attrList[ii] + '</td>';\n                markup = markup + '<td>' + actionArray[ii].value.toString() + '</td>';\n                markup = markup + '</tr>';\n            }\n            markup = markup + '</tbody>';\n            $(\"#showDeviceTable\").append(markup);\n\n            $( \"#showDeviceDialog\" ).dialog( \"option\", \"title\", \"Device Setting\"); \n            $( \"#showDeviceDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#showDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Close\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n",
        "output": "str",
        "x": 290,
        "y": 280,
        "wires": [
            [
                "207a1450.67f23c"
            ]
        ]
    },
    {
        "id": "4140c1ee.dca18",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 700,
        "wires": [
            [
                "8bfd61eb.0f8f1"
            ]
        ]
    },
    {
        "id": "8bfd61eb.0f8f1",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from settings log",
        "func": "var queryFilter = \n{\n    'ipInfo.ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 700,
        "wires": [
            [
                "f7ff007a.8d8b"
            ]
        ]
    },
    {
        "id": "f7ff007a.8d8b",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "settingsLog",
        "operation": "findAndRemove",
        "x": 710,
        "y": 700,
        "wires": [
            [
                "ab1257ae.74fda8"
            ]
        ]
    },
    {
        "id": "ab1257ae.74fda8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "79a0dc4b.21aaa4",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 780,
        "wires": [
            [
                "d3d9bc03.02e38"
            ]
        ]
    },
    {
        "id": "d3d9bc03.02e38",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "remove 127.0.0.1 from access log",
        "func": "var queryFilter = \n{\n    'ip' : '127.0.0.1'\n}\nvar newMsg = \n{\n    topic           : 'remove127',\n    payload         : [queryFilter, null],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 780,
        "wires": [
            [
                "7ffae9ab.87bee8"
            ]
        ]
    },
    {
        "id": "7ffae9ab.87bee8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "accessLog",
        "operation": "findAndRemove",
        "x": 710,
        "y": 780,
        "wires": [
            [
                "35a0f533.d24c2a"
            ]
        ]
    },
    {
        "id": "35a0f533.d24c2a",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "e4c1258f.54e248",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "1f057b8c.e3a574",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 720,
        "y": 280,
        "wires": []
    },
    {
        "id": "e98d4d33.bcca2",
        "type": "template",
        "z": "df70f6f.9e4ed08",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.javascript.specialscalar}}}\n{{{payload.javascript.scalardevicemenu}}}",
        "output": "str",
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "aea924a9.6a9e68",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "",
        "url": "/device",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "7db15dac.050a44"
            ]
        ]
    },
    {
        "id": "fe60c45b.b5b258",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 490,
        "y": 920,
        "wires": [
            [
                "5610900e.5ca0b"
            ]
        ]
    },
    {
        "id": "5610900e.5ca0b",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 920,
        "wires": []
    },
    {
        "id": "7db15dac.050a44",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "var queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nmsg.payload = queryMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 920,
        "wires": [
            [
                "fe60c45b.b5b258"
            ]
        ]
    },
    {
        "id": "281ae8e3.adc998",
        "type": "comment",
        "z": "90f83725.6dae08",
        "name": "http://braincool-controlbox-01.local/device?deviceType=chillDetector&name=003",
        "info": "",
        "x": 340,
        "y": 880,
        "wires": []
    },
    {
        "id": "6427e682.999898",
        "type": "inject",
        "z": "90f83725.6dae08",
        "name": "Inject after 2 seconds",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "58b2c46f.831b8c"
            ]
        ]
    },
    {
        "id": "58b2c46f.831b8c",
        "type": "exec",
        "z": "90f83725.6dae08",
        "command": "timedatectl",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Get System Time Data",
        "x": 400,
        "y": 1060,
        "wires": [
            [
                "93bceb65.3003d8"
            ],
            [],
            []
        ]
    },
    {
        "id": "93bceb65.3003d8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Check system time sync",
        "func": "var splitString = msg.payload.split('\\n');\ntimeInfo = {};\nfor (ii = 0; ii < splitString.length; ++ii)\n{\n    if (splitString[ii].indexOf(':') >= 0)\n    {\n        var timeKey = splitString[ii].substring(0,splitString[ii].indexOf(':'));\n        if (timeKey.indexOf(' ') == 0) timeKey = timeKey.substring(1);\n        var timeData = splitString[ii].substring(splitString[ii].indexOf(':') + 1);\n        if (timeData.indexOf(' ') == 0) timeData = timeData.substring(1);\n        timeKey = timeKey.replace(/\\s/g,'');\n        timeInfo[timeKey] = timeData;\n    }\n}\nvar systemClockSynchronized = true;\nif (timeInfo['Systemclocksynchronized'] == 'no') systemClockSynchronized = false;\nglobal.set('systemClockSynchronized', systemClockSynchronized);\nreturn {topic:'timeInfo',payload:timeInfo};",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1040,
        "wires": [
            [
                "95fa04ef.3dc7a8"
            ]
        ]
    },
    {
        "id": "95fa04ef.3dc7a8",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 830,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7d8868df.dde518",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/setServerTime",
        "url": "/setServerTime",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "4c2ffe1e.b39ee"
            ]
        ]
    },
    {
        "id": "c08f345e.b91608",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div id='querySetup'>\n        <div class='row'>\n            <div class='col-md-12' align='center'>\n                <input class=\"form-control big-text\" id=\"serverTime\" type=\"text\"/>\n            </div>\n       </div>\n    </div>\n",
        "output": "str",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "825f0c7f.2dbd8"
            ]
        ]
    },
    {
        "id": "825f0c7f.2dbd8",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Set System Time",
        "output": "str",
        "x": 570,
        "y": 440,
        "wires": [
            [
                "e7584802.07eb68"
            ]
        ]
    },
    {
        "id": "4c2ffe1e.b39ee",
        "type": "template",
        "z": "90f83725.6dae08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $( function()\n            {\n                $('#serverTime').datetimepicker();\n            } );\n            jQuery.datepicker._hideDatepicker = function() {setServerTime();};\n        }\n        function onWebSocketOpen()\n        {\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getServerTime',\n                    userID      : userID\n                });\n         }\n        function onWebSocketClose()\n        {\n            \n        }\n\n        function onWebSocketMessage(msg)\n        {\n            if (msg.userID == userID)\n            {\n                switch(msg.topic)\n                {\n                    case 'getServerTime':\n                        var serverTimeDate = new Date(msg.serverTime);\n                        $('#serverTime').val(serverTimeDate.toLocaleString('en-US',{year: 'numeric', month: '2-digit', day : '2-digit', hour12:false, hour: '2-digit', minute: '2-digit'}).replace(',', ''));\n                        $('#serverTime').focus();\n                        break;\n                    case 'setServerTime':\n                        window.location.replace('{{{payload.parentRef}}}');\n                        break;\n                    default:\n                    // code block\n                }\n            }\n        }\n        function setServerTime()\n        {\n            var month = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'];\n            var serverTime = new Date($( \"#serverTime\" ).val());\n            var hoursString = serverTime.getHours().toString();\n            if (serverTime.getHours() < 10) hoursString = '0' + hoursString;\n            var minsString = serverTime.getMinutes().toString();\n            if (serverTime.getMinutes() < 10) minsString = '0' + minsString;\n            var dayString = (serverTime.getDay() + 1).toString();\n            if (serverTime.getDay() < 9) dayString = '0' + dayString;\n            var dateString =  dayString + ' ' + month[serverTime.getMonth()]  + ' ' + serverTime.getFullYear().toString();\n            dateString = dateString + ' ' + hoursString + ':' + minsString + ':00';\n            \n            dateString = 'sudo date -s \"' + dateString + '\"';\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'setServerTime',\n                    userID      : userID,\n                    serverTime   : dateString,\n                });\n            \n        }\n\n",
        "output": "str",
        "x": 310,
        "y": 440,
        "wires": [
            [
                "c08f345e.b91608"
            ]
        ]
    },
    {
        "id": "ba75eb0.30b8818",
        "type": "websocket in",
        "z": "90f83725.6dae08",
        "name": "/setServerTime/websocket",
        "server": "84a0efe3.385ca",
        "client": "",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "cb29f7d7.6e6728"
            ]
        ]
    },
    {
        "id": "cb29f7d7.6e6728",
        "type": "json",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "496176b8.acb568"
            ]
        ]
    },
    {
        "id": "425df588.79192c",
        "type": "websocket out",
        "z": "90f83725.6dae08",
        "name": "/setServerTime/websocket",
        "server": "84a0efe3.385ca",
        "client": "",
        "x": 1240,
        "y": 560,
        "wires": []
    },
    {
        "id": "496176b8.acb568",
        "type": "switch",
        "z": "90f83725.6dae08",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getServerTime",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setServerTime",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 580,
        "wires": [
            [
                "14e40e60.0f5e92"
            ],
            [
                "b36ee485.c65028"
            ]
        ]
    },
    {
        "id": "14e40e60.0f5e92",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Get Server Time",
        "func": "msg.payload['serverTime'] = new Date().getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 560,
        "wires": [
            [
                "425df588.79192c"
            ]
        ]
    },
    {
        "id": "925da169.4d3ef",
        "type": "exec",
        "z": "90f83725.6dae08",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 770,
        "y": 620,
        "wires": [
            [
                "3d35e6b.324221a"
            ],
            [],
            []
        ]
    },
    {
        "id": "b36ee485.c65028",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set Server Time",
        "func": "return {topic : 'setServerTime', payload: msg.payload.serverTime, userID: msg.payload.userID};",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 620,
        "wires": [
            [
                "925da169.4d3ef"
            ]
        ]
    },
    {
        "id": "3d35e6b.324221a",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Set Time Sync Completed",
        "func": "global.set('systemClockSynchronized', true);\nreturn {topic:'timeInfo',payload:{topic : 'setServerTime', payload: {} , userID: msg.userID}};",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 620,
        "wires": [
            [
                "425df588.79192c"
            ]
        ]
    },
    {
        "id": "e7584802.07eb68",
        "type": "subflow:f22a539a.a67b3",
        "z": "90f83725.6dae08",
        "name": "",
        "x": 740,
        "y": 440,
        "wires": []
    },
    {
        "id": "a3efdc0a.76eff",
        "type": "mongodb3 in",
        "z": "8475ab9.3d26058",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 710,
        "y": 400,
        "wires": [
            [
                "28d7885b.29ba58"
            ]
        ]
    },
    {
        "id": "28d7885b.29ba58",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Sort Archive Data",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\n\nfunction sortByKey(arr, key) \n{\n    return arr.sort( function(a, b) \n        {\n            var x = a[key]; \n            var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        } );\n}\n\nvar numRecords = objectLength(msg.payload);\nif (numRecords < 1)\n{\n    return {\n        topic : msg.device.deviceType,\n        payload:{\n            topic           : 'getArchiveValues',\n            payload         : {device: msg.device, trace:null},\n            userID          : msg.userID,\n        }\n    };\n}\nvar records = [];\nfor (var ii = 0; ii < numRecords; ++ii) records[ii] = msg.payload[ii]; \nsortByKey(records, 'timeStamp');\nvar trace = [];\nfor (var ii = 0; ii < numRecords; ++ii)\n{\n    trace[ii] = {timeStamp: records[ii].timeStamp};\n    for (var ij = 0; ij < msg.device.attr.length; ++ij)\n    {\n        trace[ii][msg.device.attr[ij]] = records[ii][msg.device.attr[ij]];\n    }\n}\n\nreturn {\n    topic : msg.device.deviceType,\n    payload:{\n        topic           : 'getArchiveValues',\n        payload         : {device: msg.device, trace: trace},\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 320,
        "wires": [
            [
                "afc4764a.490a98"
            ]
        ]
    },
    {
        "id": "afc4764a.490a98",
        "type": "switch",
        "z": "8475ab9.3d26058",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rfct",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mode-0-damper",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "84974c1b.507e5"
            ],
            [
                "5affdedd.5d6c"
            ]
        ]
    },
    {
        "id": "b6b8b063.9f62f",
        "type": "function",
        "z": "8475ab9.3d26058",
        "name": "Setup Archive Query",
        "func": "var projectionFilter =  \n{\n    projection:\n    {\n        _id                         :   0, \n        deviceType                  :   1,  \n        name                        :   1,  \n        timeStamp                   :   1 \n    } \n};\nfor (var ii = 0; ii < msg.payload.device.attr.length; ++ii)\n{\n    projectionFilter.projection[msg.payload.device.attr[ii]] = 1;\n}\nvar queryFilter = \n{\n    $and :\n    [\n        {\n            deviceType: msg.payload.device.deviceType\n        },\n        {\n            name: msg.payload.device.name\n        },\n        {\n            timeStamp :\n            {\n                $gte: msg.payload.device.startDate,\n                $lte: msg.payload.device.stopDate\n            }\n        }\n    ] \n    \n}\nvar newMsg = \n{\n    topic           : 'getArchiveValues',\n    userID          : msg.payload.userID,\n    payload         : [queryFilter, projectionFilter],\n    device          : msg.payload.device,\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 460,
        "wires": [
            [
                "a3efdc0a.76eff"
            ]
        ]
    },
    {
        "id": "47892a91.a84984",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Update  shimmy-spotter  Database entry with MQTT",
        "func": "var device = \n{\n  \"name\": \"001\",\n  \"deviceType\": \"shimmy-spotter\",\n  \"arcPeriod\": 60000,\n  \"timeStamp\": 1577192916202,\n  \"lastArchive\": 1577192892513,\n  \"maxAmp\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 58.26,\n    \"unit\": \"um\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 0,\n        \"low\": 10,\n        \"high\": 800,\n        \"hihi\": 1000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"maxAmpMode\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 115.23,\n    \"unit\": \"Hz\",\n    \"alarm\": {\n      \"value\": 4,\n      \"limits\": {\n        \"lolo\": 0.3,\n        \"low\": 0.5,\n        \"high\": 85,\n        \"hihi\": 88\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"avgPower\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 856.68,\n    \"unit\": \"um\",\n    \"alarm\": {\n      \"value\": 4,\n      \"limits\": {\n        \"lolo\": 0,\n        \"low\": 10,\n        \"high\": 1000,\n        \"hihi\": 100\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"ultraAmp\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 2137,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 1870,\n        \"low\": 2000,\n        \"high\": 2500,\n        \"hihi\": 3000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"freqOffsetReading\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": -100,\n    \"unit\": \"Hz\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2000,\n        \"low\": -1500,\n        \"high\": 1500,\n        \"hihi\": 2000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"sampleIntervalReading\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 4000,\n    \"unit\": \"uS\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 1990,\n        \"low\": 1991,\n        \"high\": 40000,\n        \"hihi\": 50000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"linkQuality\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": 47,\n    \"unit\": \"/70\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 30,\n        \"low\": 40,\n        \"high\": 71,\n        \"hihi\": 80\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"signalLevel\": {\n    \"action\": \"reading\",\n    \"type\": \"scalar\",\n    \"value\": -63,\n    \"unit\": \"dBm\",\n    \"alarm\": {\n      \"value\": 1,\n      \"limits\": {\n        \"lolo\": -70,\n        \"low\": -60,\n        \"high\": 0,\n        \"hihi\": 30\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"spectrum\": {\n    \"action\": \"reading\",\n    \"type\": \"vector\",\n    \"value\": [[],[]]\n  },\n  \"minDisplayMode\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 0.5,\n    \"unit\": \"Hz\",\n    \"alarm\": {\n      \"value\": 1,\n      \"limits\": {\n        \"lolo\": 0.3,\n        \"low\": 0.6,\n        \"high\": 85,\n        \"hihi\": 88\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"maxDisplayMode\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 250,\n    \"unit\": \"Hz\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 0.3,\n        \"low\": 0.6,\n        \"high\": 250,\n        \"hihi\": 250\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"freqOffsetSetting\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": -100,\n    \"unit\": \"Hz\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": -2000,\n        \"low\": -1500,\n        \"high\": 1500,\n        \"hihi\": 2000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"sampleIntervalSetting\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 3000,\n    \"unit\": \"uS\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 1990,\n        \"low\": 1991,\n        \"high\": 40000,\n        \"hihi\": 50000\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  },\n  \"averages\": {\n    \"action\": \"setting\",\n    \"type\": \"scalar\",\n    \"value\": 1,\n    \"unit\": \"unit\",\n    \"alarm\": {\n      \"value\": 0,\n      \"limits\": {\n        \"lolo\": 1,\n        \"low\": 1,\n        \"high\": 20,\n        \"hihi\": 100\n      },\n      \"notify\": {\n        \"name\": \"\",\n        \"number\": \"\",\n        \"time\": 0\n      }\n    }\n  }\n\n};\nreturn {topic:'blinky-lite/ultra-ncab/001/setting', payload:device};",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 2020,
        "wires": [
            [
                "f2a0c42e.7c1d68"
            ]
        ]
    },
    {
        "id": "4420d4cc.98db9c",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 2020,
        "wires": [
            [
                "47892a91.a84984"
            ]
        ]
    },
    {
        "id": "cf4aa6c0.2d2178",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/rfct/websocket",
        "server": "73ec76d9.becae8",
        "client": "",
        "x": 1160,
        "y": 60,
        "wires": []
    },
    {
        "id": "483ca7ab.6917f8",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/oo-display/websocket",
        "server": "c29a3d27.9bd56",
        "client": "",
        "x": 1180,
        "y": 100,
        "wires": []
    },
    {
        "id": "ef96514.0f55eb",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/oo-spec/websocket",
        "server": "522ee5c7.5fbe7c",
        "client": "",
        "x": 1180,
        "y": 140,
        "wires": []
    },
    {
        "id": "674b3b5a.aec814",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "rfct device socket",
        "links": [
            "29f3aee5.102672",
            "439b1d51.6f5e64",
            "84974c1b.507e5"
        ],
        "x": 1035,
        "y": 60,
        "wires": [
            [
                "cf4aa6c0.2d2178"
            ]
        ]
    },
    {
        "id": "3013c7d6.60d5c8",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "oo-display device socket",
        "links": [
            "439b1d51.6f5e64",
            "9d4bada0.71b3b"
        ],
        "x": 1035,
        "y": 100,
        "wires": [
            [
                "483ca7ab.6917f8"
            ]
        ]
    },
    {
        "id": "6bfd49cd.905e58",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "oo-spectrogram device socket",
        "links": [
            "9d4bada0.71b3b"
        ],
        "x": 1035,
        "y": 140,
        "wires": [
            [
                "ef96514.0f55eb"
            ]
        ]
    },
    {
        "id": "29f3aee5.102672",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "rfct device mqtt",
        "links": [
            "674b3b5a.aec814"
        ],
        "x": 895,
        "y": 80,
        "wires": []
    },
    {
        "id": "9d4bada0.71b3b",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "osc-over device mqtt",
        "links": [
            "3013c7d6.60d5c8",
            "6bfd49cd.905e58",
            "807f098e.c2d9c8"
        ],
        "x": 895,
        "y": 120,
        "wires": []
    },
    {
        "id": "84974c1b.507e5",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "Archive rfct Out",
        "links": [
            "674b3b5a.aec814"
        ],
        "x": 935,
        "y": 300,
        "wires": []
    },
    {
        "id": "31124d58.efb8d2",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/rfct/websocket",
        "server": "73ec76d9.becae8",
        "client": "",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "45a7d04b.f97db"
            ]
        ]
    },
    {
        "id": "91edd78d.f5ce38",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/oo-display/websocket",
        "server": "c29a3d27.9bd56",
        "client": "",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "45a7d04b.f97db"
            ]
        ]
    },
    {
        "id": "7b0c2d08.b392b4",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/mode-0-damper/websocket",
        "server": "df8b76c8.6474b8",
        "client": "",
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "48e2cd50.db32a4",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "mode-0-damper device mqtt",
        "links": [
            "3bafbb0a.bd3834"
        ],
        "x": 895,
        "y": 160,
        "wires": []
    },
    {
        "id": "5affdedd.5d6c",
        "type": "link out",
        "z": "8475ab9.3d26058",
        "name": "Archive mode-0-damper Out",
        "links": [
            "3bafbb0a.bd3834"
        ],
        "x": 935,
        "y": 340,
        "wires": []
    },
    {
        "id": "3bafbb0a.bd3834",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "mode-0-damper device socket",
        "links": [
            "439b1d51.6f5e64",
            "48e2cd50.db32a4",
            "5affdedd.5d6c"
        ],
        "x": 1035,
        "y": 180,
        "wires": [
            [
                "7b0c2d08.b392b4"
            ]
        ]
    },
    {
        "id": "12aa14d7.99e20b",
        "type": "websocket in",
        "z": "8475ab9.3d26058",
        "name": "/mode-0-damper/websocket",
        "server": "df8b76c8.6474b8",
        "client": "",
        "x": 180,
        "y": 580,
        "wires": [
            [
                "45a7d04b.f97db"
            ]
        ]
    },
    {
        "id": "c3761de5.51f6a",
        "type": "mqtt in",
        "z": "e17f7487.2a78e8",
        "name": "Subscribe Readings",
        "topic": "$(ARCHIVETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "84d80994.260508",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "1de67fe2.40e2e"
            ]
        ]
    },
    {
        "id": "1de67fe2.40e2e",
        "type": "json",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "2f6b8176.8101fe"
            ]
        ]
    },
    {
        "id": "2f6b8176.8101fe",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, mqttDevice : device, payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 80,
        "wires": [
            [
                "ee4c177c.2435b8"
            ]
        ]
    },
    {
        "id": "ee4c177c.2435b8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "parse topic",
        "func": "return {\n    topic   :msg.payload.name, \n    payload : \n    [\n        {\n            $and   :    \n            [\n                {\n                    deviceType : msg.payload.deviceType\n                },\n                {\n                    name : msg.payload.name\n                }\n            ]\n        }, \n        {\n            projection  :\n            {\n                _id :   0\n                \n            }\n        }\n    ],\n    'device'    :   msg.payload\n};\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "731fcbcd.96f0a4"
            ]
        ]
    },
    {
        "id": "4e3763f1.63282c",
        "type": "switch",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "device.deviceType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rfct",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "osc-over",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mode-0-damper",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "72c58cab.a3c494"
            ],
            [
                "72c58cab.a3c494"
            ],
            [
                "72c58cab.a3c494"
            ]
        ]
    },
    {
        "id": "fd63f991.69fd78",
        "type": "http in",
        "z": "a858ad3a.95706",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "ef751ae9.e06be8"
            ]
        ]
    },
    {
        "id": "82a3ad6e.8e328",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/mode-0-damper?name=r3\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/balance.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Mode 0 Damper</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/oo-index\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/yellowSpaceShip.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Oscillation Overthruster</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/rfct?name=r3\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/yellowTransform.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">RFCT</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/rfill?name=r3\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/bucketYellow.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">R3 Fill Pattern</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 770,
        "y": 40,
        "wires": [
            [
                "c5035666.c97758"
            ]
        ]
    },
    {
        "id": "19310ace.c992d5",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Mode 0 Apps",
        "output": "str",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "c241b88d.b93c68"
            ]
        ]
    },
    {
        "id": "ef751ae9.e06be8",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "19310ace.c992d5"
            ]
        ]
    },
    {
        "id": "c5035666.c97758",
        "type": "subflow:8341090a.df9758",
        "z": "a858ad3a.95706",
        "name": "",
        "x": 940,
        "y": 40,
        "wires": []
    },
    {
        "id": "c241b88d.b93c68",
        "type": "template",
        "z": "a858ad3a.95706",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "appsYellow.png",
        "output": "str",
        "x": 630,
        "y": 40,
        "wires": [
            [
                "82a3ad6e.8e328"
            ]
        ]
    },
    {
        "id": "62dbc7ff.375bd8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.archive}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 910,
        "y": 240,
        "wires": [
            [
                "4dabeaa2.b9a7e4"
            ]
        ]
    },
    {
        "id": "3df7dd86.ec05a2",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.archive}}}\n{{{payload.script.editDevice}}}\n",
        "output": "str",
        "x": 600,
        "y": 280,
        "wires": [
            [
                "65a7d80b.a67778"
            ]
        ]
    },
    {
        "id": "c483d337.9b49d",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/rfct",
        "url": "/rfct",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "ed931990.cffcd8"
            ]
        ]
    },
    {
        "id": "903a1ed3.0c9fb",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "{{{payload.script.name}}} RFCT",
        "output": "str",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "f71b2efe.9417"
            ]
        ]
    },
    {
        "id": "cff88936.b2e4c8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 200,
        "wires": [
            [
                "62dbc7ff.375bd8"
            ]
        ]
    },
    {
        "id": "21d4e6fd.0ae8aa",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.archive",
        "field": "payload.html.archive",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Archive HTML -->\n                <div class='card'>\n                    <p class='card-title'>Archive</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive2hrButton\" onclick=\"getArchive(2)\" >2</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive4hrButton\" onclick=\"getArchive(4)\" >4</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive8hrButton\" onclick=\"getArchive(8)\" >8</button>\n                                    </td>\n                                    <td width='10%'  align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive24hrButton\" onclick=\"getArchive(24)\" >24</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive72hrButton\" onclick=\"getArchive(72)\" >72</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <button class='btn btn-block big-text' style='background-color:var(--color1);color:var(--color5)' id=\"archive168hrButton\" onclick=\"getArchive(168)\" >168</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='big-text' >Hours</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' id=\"waitForArchiveMessage\">\n                            <div class='col-md-12'>\n                                <h1 style='color:white;'>Retrieving Archive Data...</h1>\n                            </div>\n                        </div>\n                        <div class='row vert-pad'>\n                            <div class='col-md-12'>\n                                <div id=\"archiveChart\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 160,
        "wires": [
            [
                "cff88936.b2e4c8"
            ]
        ]
    },
    {
        "id": "41f50160.703e1",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"beamCurrentStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 120,
        "wires": [
            [
                "21d4e6fd.0ae8aa"
            ]
        ]
    },
    {
        "id": "65a7d80b.a67778",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dashboard",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Beam Current (mA)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='beamCurrentId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('beamCurrent')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Int. Beam Current (mA-Day)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='avgDayCurrentId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('avgDayCurrent')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Lifetime (hrs)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='lifetimeId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('lifetime')\" >Edit</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Accum. Rate (mA/min)</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='currentRateId' >-100</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn btn-block card-button big-text' onclick=\"editDevice('currentRate')\" >Edit</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n                <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n                    <p class='card-title' id='editDeviceDialogAttribute'>Attribute</p>\n                    <div class='card-body'>\n                        <table>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LoLo</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">LOW</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HIGH</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">HiHi</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Name</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyName\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                            <tr>\n                                <td width=\"70%\" align=\"left\">  <span class=\"tableHeading tableText\">Notify Number</span></td>\n                                <td width=\"30%\" align=\"right\"><input class=\"form-control tableText\" id=\"notifyNumber\" type=\"text\" value=\"\" /></td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>",
        "output": "str",
        "x": 940,
        "y": 80,
        "wires": [
            [
                "41f50160.703e1"
            ]
        ]
    },
    {
        "id": "9146bf6a.97a15",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.archive",
        "field": "payload.script.archive",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Archive JavaScript\n        function getArchive(hours)\n        { \n            $('#waitForArchiveMessage').show();\n            $('#archive2hrButton').attr(\"disabled\", true); \n            $('#archive4hrButton').attr(\"disabled\", true); \n            $('#archive8hrButton').attr(\"disabled\", true); \n            $('#archive24hrButton').attr(\"disabled\", true); \n            $('#archive72hrButton').attr(\"disabled\", true); \n            $('#archive168hrButton').attr(\"disabled\", true); \n            $('#archive2hrButton').css('color', 'var(--color5)'); \n            $('#archive2hrButton').css('background-color', 'var(--color1)'); \n            $('#archive4hrButton').css('color', 'var(--color5)'); \n            $('#archive4hrButton').css('background-color', 'var(--color1)'); \n            $('#archive8hrButton').css('color', 'var(--color5)'); \n            $('#archive8hrButton').css('background-color', 'var(--color1)'); \n            $('#archive24hrButton').css('color', 'var(--color5)'); \n            $('#archive24hrButton').css('background-color', 'var(--color1)'); \n            $('#archive72hrButton').css('color', 'var(--color5)'); \n            $('#archive72hrButton').css('background-color', 'var(--color1)'); \n            $('#archive168hrButton').css('color', 'var(--color5)'); \n            $('#archive168hrButton').css('background-color', 'var(--color1)'); \n            switch(hours)\n            {\n                case 2:\n                    $('#archive2hrButton').css('color', 'var(--color1)'); \n                    $('#archive2hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 4:\n                    $('#archive4hrButton').css('color', 'var(--color1)'); \n                    $('#archive4hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 8:\n                    $('#archive8hrButton').css('color', 'var(--color1)'); \n                    $('#archive8hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 24:\n                    $('#archive24hrButton').css('color', 'var(--color1)'); \n                    $('#archive24hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 72:\n                    $('#archive72hrButton').css('color', 'var(--color1)'); \n                    $('#archive72hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                case 168:\n                    $('#archive168hrButton').css('color', 'var(--color1)'); \n                    $('#archive168hrButton').css('background-color', 'var(--color5)'); \n                    break;\n                default:\n                // code block\n            }\n            archiveRequestList = [];\n            archiveList = [];\n            var stopDate = new Date().getTime();\n            var startDate = stopDate - hours * 3600000;\n            archiveRequestList[0] = \n            {\n                deviceType : restfulDevice.deviceType,\n                name : restfulDevice.name, \n                attr : ['beamCurrent','avgDayCurrent','lifetime','currentRate'],\n                startDate: startDate, \n                stopDate: stopDate,\n            };\n           getArchiveValues();\n        }\n        function getArchiveValues()\n        {\n            sendWebSocketMessageObject(\n                {\n                    topic       : 'getArchive',\n                    userID      : userID,\n                    device      : archiveRequestList[0],\n                 });\n            archiveRequestList.shift();\n            return;\n        }\n        function putArchiveValues(data)\n        {\n            archiveList.push(data);\n            if (archiveRequestList.length > 0)\n            {\n                getArchiveValues();\n            }\n            else\n            {\n                plotArchive();\n            }\n        }\n        function plotArchive(records, stopDate)\n        {\n            $('#waitForArchiveMessage').hide();\n            $('#archive2hrButton').attr(\"disabled\", false); \n            $('#archive4hrButton').attr(\"disabled\", false); \n            $('#archive8hrButton').attr(\"disabled\", false); \n            $('#archive24hrButton').attr(\"disabled\", false); \n            $('#archive72hrButton').attr(\"disabled\", false); \n            $('#archive168hrButton').attr(\"disabled\", false); \n             var layout =\n            {\n                showlegend  : true,\n                legend      : { x: 0, y: 1.15},\n                height      : '500',\n                width       : '',\n                xaxis       :\n                {\n                    title: 'Hours since ' + new Date(archiveList[0].device.stopDate).toLocaleString(),\n                },\n                yaxis:\n                {\n                    title           : 'Beam Current (mA)',\n                    titlefont       : {color: plotConfig.trace1Color},\n                    tickfont        : {color: plotConfig.trace1Color},\n                    gridcolor       : plotConfig.trace1GridColor,\n                    zerolinecolor   : plotConfig.trace1GridColor,\n                    linecolor       : plotConfig.trace1GridColor,\n//                    type: 'log',\n//                    range: [0,Math.log10(300)]\n                    range: [0,300]\n    \n                },\n                yaxis2:\n                {\n                    title           : 'Rates',\n                    titlefont       : {color: plotConfig.trace2Color},\n                    tickfont        : {color: plotConfig.trace2Color},\n                    gridcolor       : plotConfig.trace2GridColor,\n                    zerolinecolor   : plotConfig.trace2GridColor,\n                    linecolor       : plotConfig.trace2GridColor,\n                    overlaying: 'y',\n                    side: 'right',\n//                    type: 'log',\n//                    range: [-1,Math.log10(30)]\n                    range   : [0,30]\n                },\n                margin: \n                    {\n                        t: 30, //top margin\n    //                    l: 0, //left margin\n    //                    r: 0, //right margin\n    //                    b: 20 //bottom margin\n                    },\n            };\n            var trace1 = \n            {\n                x: [],\n                y: [],\n                name: 'Beam Current (mA)',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: plotConfig.trace1Color}\n        \n            };\n            var trace2 = \n            {\n                x: [],\n                y: [],\n                name: 'Int. Beam Current (mA-Day)',\n                yaxis: 'y1',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'green'}\n        \n            };\n            var trace3 = \n            {\n                x: [],\n                y: [],\n                name: 'Lifetime (hrs)',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: plotConfig.trace2Color}\n        \n            };\n            trace4 = \n            {\n                x: [],\n                y: [],\n                name: 'Accum. Rate (mA/min)',\n                yaxis: 'y2',\n                type: 'scatter',\n                mode: 'lines',\n                line: {color: 'red'}\n        \n            };\n            if (archiveList[0].trace != null)\n            {\n                for (var ii = 0; ii < archiveList[0].trace.length; ++ii)\n                {\n                    var x = (archiveList[0].trace[ii].timeStamp - archiveList[0].device.stopDate) / 3600000.0;\n                    trace1.x[ii] = x;\n                    trace1.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[0]] ;\n                    trace2.x[ii] = x;\n                    trace2.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[1]];\n                    trace3.x[ii] = x;\n                    trace3.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[2]];\n                    trace4.x[ii] = x;\n                    trace4.y[ii] = archiveList[0].trace[ii][archiveList[0].device.attr[3]];\n                }\n                Plotly.newPlot('archiveChart', [trace1, trace2, trace3, trace4], layout);\n            }\n        }\n",
        "output": "str",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "a5c36b83.aecad8"
            ]
        ]
    },
    {
        "id": "f4897c00.dc38e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            var beamCurrentValue = device.beamCurrent.value;\n            var avgDayCurrentValue = device.avgDayCurrent.value;\n            var lifetimeValue = device.lifetime.value;\n            var currentRateValue = device.currentRate.value;\n            beamCurrentStripChart.addTracePoints(beamCurrentValue, avgDayCurrentValue, lifetimeValue, currentRateValue);\n            $('#beamCurrentId').text(beamCurrentValue);\n            $('#avgDayCurrentId').text(avgDayCurrentValue);\n            $('#lifetimeId').text(lifetimeValue);\n            $('#currentRateId').text(currentRateValue);\n        }\n",
        "output": "str",
        "x": 640,
        "y": 160,
        "wires": [
            [
                "9146bf6a.97a15"
            ]
        ]
    },
    {
        "id": "e45ee703.3dce78",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var plotConfig = \n        {\n            trace1Title : 'Beam Current (mA)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Color : '#f2a321',\n            trace2GridColor : '#f8d8a0',\n            plotLength  : 1800,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'beamCurrentStripChart'\n        };\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        let beamCurrentStripChart = new StripChart(plotConfig);\n        var programStarted = false;\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#waitForArchiveMessage').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                getArchive(24);\n            }\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getArchiveValues':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n",
        "output": "str",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "f4897c00.dc38e"
            ]
        ]
    },
    {
        "id": "2ef9ec7d.2e0464",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : 'Rates',\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [-5,20]\n                     },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace1Color}\n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Int. Beam Current (mA-Day)',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: 'green'}\n            \n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Lifetime (hrs)',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace2Color}\n            \n                };\n                this.trace4 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Accum. Rate (mA/min)',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: 'red'}\n            \n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt, trace3Pt,trace4Pt)\n            {\n                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                        this.trace4.x.shift();\n                        this.trace4.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n\n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                this.trace4.x.push(now);\n                this.trace4.y.push(trace4Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3, this.trace4], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 640,
        "y": 80,
        "wires": [
            [
                "e45ee703.3dce78"
            ]
        ]
    },
    {
        "id": "3f1673ec.23251c",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/oo-display",
        "url": "/oo-display",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 420,
        "wires": [
            [
                "60bbe7d6.2f6f38"
            ]
        ]
    },
    {
        "id": "e6ee03f.f47fc",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/oo-spec",
        "url": "/oo-spec",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "8a3ea40e.a1fad8"
            ]
        ]
    },
    {
        "id": "be9f2720.10b9b8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var oldModesToPlot = [-1,-1,-1,-1];\n        var modesToPlot = [0,0,0,0];\n        var modesToPlotColor = ['blue', 'red', 'orange', 'magenta'];\n        var modeDisplayAttrName = ['modeDisplayA', 'modeDisplayB', 'modeDisplayC', 'modeDisplayD'];\n        var modeDisplayEditName = '';\n        var plotStart = new Date();\n        var modeEvTraceData = [{},{},{},{}];\n        var modeEvLayout =\n        {   \n            title: 'Mode Evolution',\n            showlegend: true,\n            legend:{x: 0,y: 1.35 },\n            xaxis: {title: 'Time (sec)'},\n            yaxis: {title: 'Mode Amplitude (pS)'},\n        };\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n            acknowledgeDialog('Alert', 'Wait!', 'Contacting the Mother Ship...');\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n\n        function updateDmaReadings()\n        {\n            phasePlot();\n            modePlot();\n            bunchPlot();\n            iqPlot();\n            bunchLengthPlot();\n            dataGlobal();\n            var startModeEvPlot = false;\n            for (var ii = 0; ii < modesToPlot.length; ++ii)\n            {\n                modesToPlot[ii] = device[ modeDisplayAttrName[ii] ].value;\n                if (modesToPlot[ii] != oldModesToPlot[ii]) \n                {\n                    startModeEvPlot = true;\n                    $('#' + modeDisplayAttrName[ii]).html(modesToPlot[ii].toString());\n                }\n                oldModesToPlot[ii] = modesToPlot[ii];\n            }\n            if (startModeEvPlot)\n            {\n                initModeEvPlot();\n            }\n            updateModeEvPlot();\n            $( \"#acknowledgeDialog\" ).dialog('close');\n\n     \n        }\n        function dataGlobal()\n        {\n            $(\"#beamCurrent\").text(Math.round(device.beamCurrent.value * 100.0) / 100.0);\n            $(\"#rmsPhase\").text(Math.round(device.rmsModeAmp.value * 100.0) / 100.0);\n            $(\"#maxMode\").text(device.maxDipoleMode.value);\n            $(\"#modeAmplitude\").text(Math.round(device.maxDipoleModeAmp.value * 100.0) / 100.0);\n            $(\"#avgPhase\").text(Math.round(device.avgPhase.value * 100.0) / 100.0);\n            $(\"#phaseDrive\").text(Math.round(1000.0 * device.phaseShiftQ.value * 100.0) / 100.0);\n        }\n        function phasePlot()\n        {\n            var layout =\n            {   \n                title: 'Phase',\n                showlegend: true,\n                legend:{x: 0,y: 1.2 },\n                xaxis: {title: 'Bunch Number'},\n                yaxis: {title: 'phase (pS)'},\n                yaxis2: {title: 'Diff. phase (pS)', overlaying: 'y', side: 'right'}\n            };\n            var traceData = [{},{}];\n            var phase = device.phase.value;\n            var difPhase = device.difPhase.value;\n            traceData[0] = {x: [],y: [],name: 'phase',      yaxis: 'y1',type: 'scatter',mode: 'lines'};\n            traceData[1] = {x: [],y: [],name: 'Diff. phase',yaxis: 'y2',type: 'scatter',mode: 'lines' };\n            for (var ii = 0; ii < phase[0].length; ++ii)\n            {\n                traceData[0].x[ii] = phase[0][ii];\n                traceData[0].y[ii] = phase[1][ii];\n                traceData[1].x[ii] = difPhase[0][ii];\n                traceData[1].y[ii] = difPhase[1][ii];\n            }\n            Plotly.newPlot('phasePlot', traceData, layout);\n        }\n        function modePlot()\n        {\n            var layout =\n            {   \n                title: 'Mode Spectrum',\n                xaxis: {title: 'Mode Number'},\n                yaxis: {title: 'Amplitude (pS)'},\n            };\n            var modeM = device.modeM.value;\n            var traceData = [{}];\n            traceData[0] = {x: [],y: [],name: 'mode', yaxis: 'y1',type: 'scatter',mode: 'lines'};\n            for (var ii = 0; ii < modeM[0].length; ++ii)\n            {\n                traceData[0].x[ii] = modeM[0][ii];\n                traceData[0].y[ii] = modeM[1][ii];\n            }\n            Plotly.newPlot('modePlot', traceData, layout);\n        }\n        function bunchPlot()\n        {\n            var layout =\n            {   \n                title: 'Bunch Intensity',\n                showlegend: true,\n                legend:{x: 0,y: 1.2 },\n                xaxis: {title: 'Bunch Number'},\n                yaxis: {title: 'Bunch Current (mA)'},\n                yaxis2: {title: 'Peak Bunch Current (mA)', overlaying: 'y', side: 'right'}\n            };\n            var bunchCurrent = device.bunchCurrent.value;\n            var peakBunchCurrent = device.peakBunchCurrent.value;\n            var traceData = [{},{}];\n            traceData[0] = {x: [],y: [],name: 'bunch Intensity', yaxis: 'y1',type: 'scatter',mode: 'lines'};\n            traceData[1] = {x: [],y: [],name: 'peak bunch Intensity', yaxis: 'y2',type: 'scatter',mode: 'lines'};\n            for (var ii = 0; ii < bunchCurrent[0].length; ++ii)\n            {\n                traceData[0].x[ii] = bunchCurrent[0][ii];\n                traceData[0].y[ii] = bunchCurrent[1][ii];\n                traceData[1].x[ii] = peakBunchCurrent[0][ii];\n                traceData[1].y[ii] = peakBunchCurrent[1][ii];\n            }\n            Plotly.newPlot('bunchPlot', traceData, layout);\n        }\n        function iqPlot()\n        {\n            var layout =\n            {   \n                title: 'IQ',\n                showlegend: true,\n                legend:{x: 0,y: 1.2 },\n                xaxis: {title: 'Bunch Number'},\n                yaxis: {title: 'I Trace (Volts)'},\n                yaxis2: {title: 'Q Trace (Volts)', overlaying: 'y', side: 'right'}\n            };\n            var trace1 = device.trace1.value;\n            var trace2 = device.trace2.value;\n            var trace3 = device.trace3.value;\n            var trace4 = device.trace4.value;\n            var traceData = [{},{},{}];\n            traceData[0] = {x: [],y: [],name: 'I Trace', yaxis: 'y1',type: 'scatter',mode: 'lines'};\n            traceData[1] = {x: [],y: [],name: 'Q Trace', yaxis: 'y2',type: 'scatter',mode: 'lines' };\n            traceData[2] = {x: [],y: [],name: 'Diode Trace', yaxis: 'y1',type: 'scatter',mode: 'lines' };\n            traceData[3] = {x: [],y: [],name: 'Phase Shifter Drive', yaxis: 'y2',type: 'scatter',mode: 'lines' };\n            for (var ii = 0; ii < trace1[0].length; ++ii)\n            {\n                traceData[0].x[ii] = trace1[0][ii];\n                traceData[0].y[ii] = trace1[1][ii];\n                traceData[1].x[ii] = trace2[0][ii];\n                traceData[1].y[ii] = trace2[1][ii];\n                traceData[2].x[ii] = trace4[0][ii];\n                traceData[2].y[ii] = trace4[1][ii];\n                traceData[3].x[ii] = trace3[0][ii];\n                traceData[3].y[ii] = trace3[1][ii];\n            }\n            Plotly.newPlot('iqPlot', traceData, layout);\n        }\n        function bunchLengthPlot()\n        {\n            var layout =\n            {   \n                title: 'rms Bunch Length',\n                showlegend: true,\n                legend:{x: 0,y: 1.2 },\n                xaxis: {title: 'Bunch Number'},\n                yaxis: {title: 'Bunch Length (ps)'},\n            };\n            var bunchLength = device.bunchLength.value;\n            var traceData = [{}];\n            traceData[0] = {x: [],y: [],name: 'Bunch Length', yaxis: 'y1',type: 'scatter',mode: 'lines'};\n            for (var ii = 0; ii < bunchLength[0].length; ++ii)\n            {\n                traceData[0].x[ii] = bunchLength[0][ii];\n                traceData[0].y[ii] = bunchLength[1][ii];\n            }\n            Plotly.newPlot('bunchLengthPlot', traceData, layout);\n        }\n        function updateModeEvPlot()\n        {\n            $('#refreshModePlot').show();\n\n            var modeM = device.modeM.value;\n            var xtime = (new Date().getTime() - plotStart.getTime()) / 1000;\n            for (var imode = 0; imode < modesToPlot.length; ++imode)\n            {\n                modeEvTraceData[imode].x.push(xtime);\n                modeEvTraceData[imode].y.push(modeM[1][modesToPlot[imode]]);\n            }\n            if (modeEvTraceData[0].x.length > 500)\n            {\n                for (var imode = 0; imode < modesToPlot.length; ++imode)\n                {\n                    modeEvTraceData[imode].x.splice(0,1);\n                    modeEvTraceData[imode].y.splice(0,1);\n                }\n            }\n            Plotly.newPlot('modeEvPlot', modeEvTraceData, modeEvLayout);\n        }\n        function initModeEvPlot()\n        {\n            $('#refreshModePlot').hide();\n            \n            for (var imode = 0; imode < modesToPlot.length; ++imode)\n            {\n                modeEvTraceData[imode] = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Mode ' + modesToPlot[imode].toString(), \n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: modesToPlotColor[imode]}\n                };\n            }\n           \n        }\n        function changeModeDisplay(itrace)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            $( \"#editModeEvTraceDialogAttribute\").html('Trace ' + (itrace + 1).toString());\n            modeDisplayEditName = modeDisplayAttrName[itrace];\n\n            $( \"#modeEvTraceNumber\").val(modesToPlot[itrace]);\n\n            $( \"#editModeEvTraceDialog\" ).dialog( \"open\" );\n        }\n// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editModeEvTraceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setModeEvTraceNumber(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function setModeEvTraceNumber()\n        {\n            var modeDisplayAttr = device[ modeDisplayEditName ];\n            if (isNaN( $('#modeEvTraceNumber').val()) )\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', modeDisplayAttr.attr);\n                return;\n            }\n\n            modeDisplayAttr.value = Number($('#modeEvTraceNumber').val());\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n\n",
        "output": "str",
        "x": 730,
        "y": 420,
        "wires": [
            [
                "1c46fd5a.527d53"
            ]
        ]
    },
    {
        "id": "1c46fd5a.527d53",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width='100%' style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Summary</p>\n            <div class='card-body' align=\"center\" width='100%'>\n               <table width='100%'>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Beam current (mA)</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"beamCurrent\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">RMS Phase (pS)</span>\n                        </td>\n                         <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"rmsPhase\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Max Mode</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"maxMode\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Mode Amp (pS)</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"modeAmplitude\"></span>\n                        </td>\n                     </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Avg Phase (pS)</span>\n                        </td>\n                       <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"avgPhase\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Phase Shifter (mV)</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"phaseDrive\"></span>\n                        </td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Mode Spectrum</p>\n            <div class='card-body'>\n                <div id=\"modePlot\"></div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Mode Evolution</p>\n            <div class='card-body'>\n                <table width='100%' id='modeEvTable'>\n                    <tr>\n                        <td align=\"center\" width='20%'>\n                            <span class=\"tableHeading big-text\">Tr 1</span>\n                        </td>\n                        <td align=\"center\" width='20%'>\n                            <span class=\"tableHeading big-text\">Tr 2</span>\n                        </td>\n                        <td align=\"center\" width='20%'>\n                            <span class=\"tableHeading big-text\">Tr 3</span>\n                        </td>\n                        <td align=\"center\" width='20%'>\n                            <span class=\"tableHeading big-text\">Tr 4</span>\n                        </td>\n                        <td align=\"center\" width='20%'>\n                        </td>\n                    </tr>\n\n                      <tr>\n                        <td align=\"center\">\n                            <button class='btn btn-block card-button big-text' id=\"modeDisplayA\" onclick=\"changeModeDisplay(0)\" >-1</button>\n                        </td>\n                        <td align=\"center\">\n                            <button class='btn btn-block card-button big-text' id=\"modeDisplayB\" onclick=\"changeModeDisplay(1)\" >-1</button>\n                        </td>\n                        <td align=\"center\">\n                            <button class='btn btn-block card-button big-text' id=\"modeDisplayC\" onclick=\"changeModeDisplay(2)\" >-1</button>\n                        </td>\n                        <td align=\"center\">\n                            <button class='btn btn-block card-button big-text' id=\"modeDisplayD\" onclick=\"changeModeDisplay(3)\" >-1</button>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button big-text\" id=\"refreshModePlot\" type=\"button\" onclick=\"initModeEvPlot()\">Refresh</button>\n                        </td>\n                    </tr>\n                </table>\n                <div id=\"modeEvPlot\"></div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Bunch Intensity</p>\n            <div class='card-body'>\n                <div id=\"bunchPlot\"></div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Bunch Length</p>\n            <div class='card-body' align=\"center\">\n                <div id=\"bunchLengthPlot\"></div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Phase</p>\n            <div class='card-body'>\n                <div id=\"phasePlot\"></div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Traces</p>\n            <div class='card-body'>\n                <div id=\"iqPlot\"></div>\n            </div>\n        </div>\n    </div>\n    \n    <div id=\"editModeEvTraceDialog\" title=\"Change Trace\" class='card'>\n        <p class='card-title' id='editModeEvTraceDialogAttribute'>Attribute</p>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\"><span class=\"tableHeading tableText\">Mode</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control tableText\" id=\"modeEvTraceNumber\" type=\"text\" value=\"0\" /></td>\n                </tr>\n            </table>\n        </div>\n    </div>    \n    ",
        "output": "str",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "422d6242.d3a3fc"
            ]
        ]
    },
    {
        "id": "621e5182.2d97",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var graph3d = null;\n        var itimeSlice = 0;\n        var timeMax = 320;\n        var dataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 320;\n        var plotStarted = false;\n        \n        var threedPlotOptions =\n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            xLabel: 'x',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#000000',\n        };\n        \n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $(\"#plotslices\").change(function()\n            {\n              timeMax = Number($(\"#plotslices\").val());\n              if (timeMax < 2)\n              {\n                  alert('Number of plot slices must be greater than 1');\n                  timeMax = 2;\n              }\n              birdsEyeTimeMax = timeMax;\n              $(\"#plotslices\").val(timeMax.toString());\n              dataArray = [];\n              itimeSlice = 0;\n              plotStarted = false;\n            });\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        }\n        function onWebSocketOpen()\n        {\n            acknowledgeDialog('Alert', 'Wait!', 'Contacting the Mother Ship...');\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n        function updateDmaReadings()\n        {\n            globalData();\n            arrayData();\n            $( \"#acknowledgeDialog\" ).dialog('close');\n            \n        }\n        function globalData()\n        {\n            $(\"#beamCurrent\").text(Math.round(device.beamCurrent.value * 100.0) / 100.0);\n            $(\"#rmsPhase\").text(Math.round(device.rmsModeAmp.value * 100.0) / 100.0);\n            $(\"#maxMode\").text(device.maxDipoleMode.value);\n            $(\"#modeAmplitude\").text(Math.round(device.maxDipoleModeAmp.value * 100.0) / 100.0);\n            $(\"#avgPhase\").text(Math.round(device.avgPhase.value * 100.0) / 100.0);\n            $(\"#phaseDrive\").text(Math.round(1000.0 * device.phaseShiftQ.value * 100.0) / 100.0);\n\n        }\n        function arrayData()\n        {\n            var modeM = device.modeM.value;\n            var npts = modeM[0].length;\n            if(!plotStarted)\n            {\n                dataArray = [];\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                      dataArray[ix] =\n                      {\n                        'x': ix,\n                        'y': 0,\n                        'z': modeM[1][ix],\n                        'style': modeM[1][ix]\n                      };\n                    }\n            var container = document.getElementById('spectrogram');\n        \n            graph3d = new vis.Graph3d(container, dataArray, threedPlotOptions);\n            $(\"#startTime\").text(new Date().toLocaleString());\n            $(\"#stopTime\").text(new Date().toLocaleString());\n            graph3d.on('cameraPositionChange', onCameraPositionChange);\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n            plotStarted = true;\n          }\n          else\n          {\n            if (freeze) return;\n            if (itimeSlice < timeMax)\n            {\n              timeStamp[itimeSlice] = new Date().getTime();\n              deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n              for (var ix = 0; ix < npts; ++ix)\n              {\n                dataArray[itimeSlice * npts + ix] =\n                {\n                  'x': ix,\n                  'y': deltaT,\n                  'z': modeM[1][ix],\n                  'style': modeM[1][ix]\n                };\n              }\n              ++itimeSlice;\n            }\n            else\n            {\n              for (var itime = 0; itime < (timeMax - 1); ++itime)\n              {\n                timeStamp[itime] = timeStamp[itime + 1];\n                deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                  dataArray[itime * npts + ix] =\n                  {\n                    'x': dataArray[(itime + 1) * npts + ix].x,\n                    'y': deltaT,\n                    'z': dataArray[(itime + 1) * npts + ix].z,\n                    'style': dataArray[(itime + 1) * npts + ix].style\n                  };\n                }\n              }\n              timeStamp[timeMax - 1] = new Date().getTime();\n              deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n              for (var ix = 0; ix < npts; ++ix)\n              {\n                dataArray[(timeMax - 1) * npts + ix] =\n                {\n                  'x': ix,\n                  'y': deltaT,\n                  'z': modeM[1][ix],\n                  'style': modeM[1][ix]\n                };\n              }\n            }\n            $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n            $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n            graph3d.setData(dataArray);\n          }\n        }\n        function freezeRun()\n        {\n          freeze = !freeze;\n          if (freeze)\n          {\n            $(\"#freezeButton\").text('Frozen');\n          }\n          else\n          {\n            $(\"#freezeButton\").text('Running');\n          }\n        \n        }\n        \n        function birdsEyeView()\n        {\n          var horzAngle = 315.0 * 3.1415927 / 180.0;\n          var vertAngle = 45.0 * 3.1415927 / 180.0;\n          graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n          if (sliceViewActive)\n          {\n            timeMax =  birdsEyeTimeMax;\n            $(\"#plotslices\").val(timeMax.toString());\n          }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        \n        }\n        function sliceView()\n        {\n          var horzAngle = 0.0 * 3.1415927 / 180.0;\n          var vertAngle = 0.0 * 3.1415927 / 180.0;\n          graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n          timeMax = 2;\n          $(\"#plotslices\").val(timeMax.toString());\n          itimeSlice = 0;\n          plotStarted = false;\n          sliceViewActive = true;\n          birdsEyeViewActive = false;\n          topViewActive = false;\n        \n        }\n        function topView()\n        {\n          var horzAngle = 0 * 3.1415927 / 180.0;\n          var vertAngle = 90 * 3.1415927 / 180.0;\n          graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n          if (sliceViewActive)\n          {\n            timeMax =  birdsEyeTimeMax;\n            $(\"#plotslices\").val(timeMax.toString());\n          }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        \n        }\n        function onCameraPositionChange(event)\n        {\n          if (sliceViewActive) sliceView();\n          if (birdsEyeViewActive) birdsEyeView();\n          if (topViewActive) topView();\n        }\n",
        "output": "str",
        "x": 730,
        "y": 480,
        "wires": [
            [
                "54ad1a56.966654"
            ]
        ]
    },
    {
        "id": "54ad1a56.966654",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width='100%' style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Summary</p>\n            <div class='card-body' align=\"center\" width='100%'>\n               <table width='100%'>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Beam current (mA)</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"beamCurrent\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">RMS Phase (pS)</span>\n                        </td>\n                         <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"rmsPhase\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Max Mode</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"maxMode\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Mode Amp (pS)</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"modeAmplitude\"></span>\n                        </td>\n                     </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Avg Phase (pS)</span>\n                        </td>\n                       <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"avgPhase\"></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td width='60%' align=\"left\">\n                            <span class=\"tableText\">Phase Shifter (mV)</span>\n                        </td>\n                        <td width='40%' align=\"right\">\n                            <span class=\"card-text\" id=\"phaseDrive\"></span>\n                        </td>\n                   </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div width='100%' style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Mode Spectrum</p>\n            <div class='card-body' align=\"center\" width='100%'>\n                <div id=\"spectrogram\"></div>\n                <div class=\"row\"> \n                    <div class=\"col-md-5\" align=\"left\" >\n                        <span class=\"card-text\">Start Time</span>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <span class=\"card-text\" id=\"startTime\"></span>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-5\"  align=\"left\">\n                        <span class=\"card-text\" >Stop Time</span>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <span class=\"card-text\" id=\"stopTime\" ></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div width='100%' style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Display Control</p>\n            <div class='card-body' align=\"center\" width='100%'>\n                <div class=\"row\"> \n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block card-text\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n                    </div>\n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block card-text\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block card-text\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n                    </div>\n                    <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                        <button class=\"btn jumbotron-button btn-block card-text\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n                    </div>\n                </div>\n                <div class=\"row\"> \n                    <div class=\"col-md-5\" align=\"right\" >\n                        <span class=\"card-text\" >PlotSlices</span>\n                    </div>\n                    <div class=\"col-md-7\">\n                        <input class=\"form-control center-justify big-text\" id=\"plotslices\" type=\"text\" value=\"0\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "67e0aed1.64631"
            ]
        ]
    },
    {
        "id": "49f486ff.45b838",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Display {{{payload.script.name}}}\n",
        "output": "str",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "32241cc2.c6bdb4"
            ]
        ]
    },
    {
        "id": "2d9d9862.5a7748",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Spectrogram {{{payload.script.name}}}\n",
        "output": "str",
        "x": 430,
        "y": 480,
        "wires": [
            [
                "2e8c51d8.37769e"
            ]
        ]
    },
    {
        "id": "a5c36b83.aecad8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n",
        "output": "str",
        "x": 620,
        "y": 240,
        "wires": [
            [
                "3df7dd86.ec05a2"
            ]
        ]
    },
    {
        "id": "f71b2efe.9417",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "yellowTransform.png",
        "output": "str",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "2ef9ec7d.2e0464"
            ]
        ]
    },
    {
        "id": "32241cc2.c6bdb4",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "yellowSpaceShip.png",
        "output": "str",
        "x": 570,
        "y": 420,
        "wires": [
            [
                "be9f2720.10b9b8"
            ]
        ]
    },
    {
        "id": "2e8c51d8.37769e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "yellowSpectrum.png",
        "output": "str",
        "x": 570,
        "y": 480,
        "wires": [
            [
                "621e5182.2d97"
            ]
        ]
    },
    {
        "id": "4dabeaa2.b9a7e4",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1140,
        "y": 240,
        "wires": []
    },
    {
        "id": "422d6242.d3a3fc",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1140,
        "y": 420,
        "wires": []
    },
    {
        "id": "67e0aed1.64631",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1140,
        "y": 480,
        "wires": []
    },
    {
        "id": "ed931990.cffcd8",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'rfct';\nvar name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = deviceType;\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 80,
        "wires": [
            [
                "903a1ed3.0c9fb"
            ]
        ]
    },
    {
        "id": "60bbe7d6.2f6f38",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'osc-over';\nvar name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = deviceType;\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 420,
        "wires": [
            [
                "49f486ff.45b838"
            ]
        ]
    },
    {
        "id": "8a3ea40e.a1fad8",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'osc-over';\nvar name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = deviceType;\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "2d9d9862.5a7748"
            ]
        ]
    },
    {
        "id": "2aa8c581.313daa",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/oo-index",
        "url": "/oo-index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 360,
        "wires": [
            [
                "854e930e.a07b7"
            ]
        ]
    },
    {
        "id": "19903572.f2793b",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/oo-display?name=r3\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/yellowSpaceShip.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Display</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/oo-spec?name=r3\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"30%\" align='center'> <img src=\"/img/yellowSpectrum.png\" height=\"70px\"/></td>\n                            <td width=\"70%\" align=\"left\">Spectrum</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 750,
        "y": 360,
        "wires": [
            [
                "55df4d97.65c804"
            ]
        ]
    },
    {
        "id": "1bcc4252.cd8a2e",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Oscillation Overthruster",
        "output": "str",
        "x": 470,
        "y": 360,
        "wires": [
            [
                "9b095897.96d348"
            ]
        ]
    },
    {
        "id": "854e930e.a07b7",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 330,
        "y": 360,
        "wires": [
            [
                "1bcc4252.cd8a2e"
            ]
        ]
    },
    {
        "id": "55df4d97.65c804",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 920,
        "y": 360,
        "wires": []
    },
    {
        "id": "9b095897.96d348",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "yellowSpaceShip.png",
        "output": "str",
        "x": 610,
        "y": 360,
        "wires": [
            [
                "19903572.f2793b"
            ]
        ]
    },
    {
        "id": "1208f7ba.ab02e8",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/mode-0-damper",
        "url": "/mode-0-damper",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "3aa5e719.b02118"
            ]
        ]
    },
    {
        "id": "ab67f445.20d7d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n",
        "output": "str",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "4032a3f3.7bc67c"
            ]
        ]
    },
    {
        "id": "4032a3f3.7bc67c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.updateReadings",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            updateDipoleReadings();\n            updateQuadReadings();\n        }\n",
        "output": "str",
        "x": 640,
        "y": 660,
        "wires": [
            [
                "9ac98568.11ac18"
            ]
        ]
    },
    {
        "id": "f1035634.bbe518",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.dipole",
        "field": "payload.html.dipole",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dipole HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dipole</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>On (0 - 1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='chanOn0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Sign (-1 - +1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='sign0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Gain (-4 - +4)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='gain0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Filter Tap (1 - 20)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset0(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='timeOffset0'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset0(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                           </table>\n                            <table table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Max AC</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"maxAcValue0\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"maxAcValue0Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"maxAcValue0Button\" onclick=\"maxAcValue0()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Offset</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"dacOffset0\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"dacOffset0Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"dacOffset0Button\" onclick=\"dacOffset0()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 620,
        "wires": [
            [
                "61b7a89f.8e2048"
            ]
        ]
    },
    {
        "id": "666857af.4d8d38",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 930,
        "y": 700,
        "wires": [
            [
                "48a803c0.3deb0c"
            ]
        ]
    },
    {
        "id": "48a803c0.3deb0c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dipole}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.quad}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 910,
        "y": 740,
        "wires": [
            [
                "a6703347.773f3"
            ]
        ]
    },
    {
        "id": "61b7a89f.8e2048",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "html.quad",
        "field": "payload.html.quad",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dipole HTML -->\n                <div class='card'>\n                    <p class='card-title'>Quadrupole</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>On (0 - 1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='chanOn1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"chanOn1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Sign (-1 - +1)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='sign1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"sign1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Gain (-4 - +4)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='gain1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"gain1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Filter Tap (1 - 20)</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset1(-1)\">&#9660;</button>\n                                    </td>\n                                    <td width='10%' align='center'>\n                                        <span class='card-text' id='timeOffset1'>-1</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' onclick=\"timeOffset1(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                           </table>\n                            <table table width='100%'>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Max AC</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"maxAcValue1\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"maxAcValue1Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"maxAcValue1Button\" onclick=\"maxAcValue1()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='70%' align='left'>\n                                        <span class='card-text'>Offset</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <input id=\"dacOffset1\" type=\"text\" value=\"0\" class=\"big-text\" oninput=\"dacOffset1Change()\"/>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block card-title' id=\"dacOffset1Button\" onclick=\"dacOffset1()\" disabled>&#10004;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 920,
        "y": 660,
        "wires": [
            [
                "666857af.4d8d38"
            ]
        ]
    },
    {
        "id": "9ac98568.11ac18",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.dipole",
        "field": "payload.script.dipole",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function chanOn0(up)\n{\n    var chanOn0 = Number($('#chanOn0').html());\n    chanOn0 = chanOn0 + up;\n    if (chanOn0 > 1) chanOn0 = 1;\n    if (chanOn0 < 0) chanOn0 = 0;\n    var setAttr = device.onDipole;\n    setAttr.value = chanOn0;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nfunction sign0(up)\n{\n    var sign0 = Number($('#sign0').html());\n    sign0 = sign0 + 2 * up;\n    if (sign0 > 1) sign0 = 1;\n    if (sign0 < -1) sign0 = -1;\n    var setAttr = device.signDipole;\n    setAttr.value = sign0;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nfunction gain0(up)\n{\n    var gain0 = Number($('#gain0').html());\n    gain0 = gain0 + up;\n    if (gain0 > 4) gain0 = 4;\n    if (gain0 < -4) gain0 = -4;\n    var setAttr = device.gainDipole;\n    setAttr.value = gain0;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nfunction timeOffset0(up)\n{\n    var timeOffset0 = Number($('#timeOffset0').html());\n    timeOffset0 = timeOffset0 + up;\n    if (timeOffset0 > 20) timeOffset0 = 20;\n    if (timeOffset0 < 1) timeOffset0 = 1;\n    var setAttr = device.filterDipole;\n    setAttr.value = timeOffset0;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nvar maxAcValue0Changed = false;\nfunction maxAcValue0Change()\n{\n    maxAcValue0Changed = true;\n    $('#maxAcValue0Button').prop('disabled', false);\n \n}\nfunction maxAcValue0()\n{\n    $('#maxAcValue0Button').prop('disabled', true);\n    if (isNaN($('#maxAcValue0').val()))\n    {\n        maxAcValue0Changed = false;\n        return;\n    }\n    var maxAcValue0 = Number($('#maxAcValue0').val());\n    var setAttr = device.maxAcDipole;\n    setAttr.value = maxAcValue0;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n    maxAcValue0Changed = false;\n}\nvar dacOffset0Changed = false;\nfunction dacOffset0Change()\n{\n    dacOffset0Changed = true;\n    $('#dacOffset0Button').prop('disabled', false);\n \n}\nfunction dacOffset0()\n{\n    $('#dacOffset0Button').prop('disabled', true);\n    if (isNaN($('#dacOffset0').val()))\n    {\n        dacOffset0Changed = false;\n        return;\n    }\n    var dacOffset0 = Number($('#dacOffset0').val());\n    var setAttr = device.offsetDipole;\n    setAttr.value = dacOffset0;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n    dacOffset0Changed = false;\n}\nfunction updateDipoleReadings()\n{\n    $('#chanOn0').text(device.onDipole.value.toString());\n    $('#sign0').text(device.signDipole.value.toString());\n    $('#gain0').text(device.gainDipole.value.toString());\n    $('#timeOffset0').text(device.filterDipole.value.toString());\n    if (!$('#maxAcValue0').is(':focus') && !maxAcValue0Changed) $('#maxAcValue0').val(device.maxAcDipole.value.toString());\n    if (!$('#dacOffset0').is(':focus')  && !dacOffset0Changed)  $('#dacOffset0').val(device.offsetDipole.value.toString());\n}\n",
        "output": "str",
        "x": 610,
        "y": 700,
        "wires": [
            [
                "3fa0c410.58288c"
            ]
        ]
    },
    {
        "id": "3fa0c410.58288c",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "script.quad",
        "field": "payload.script.quad",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "function chanOn1(up)\n{\n    var chanOn1 = Number($('#chanOn1').html());\n    chanOn1 = chanOn1 + up;\n    if (chanOn1 > 1) chanOn1 = 1;\n    if (chanOn1 < 0) chanOn1 = 0;\n    var setAttr = device.onQuad;\n    setAttr.value = chanOn1;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nfunction sign1(up)\n{\n    var sign1 = Number($('#sign1').html());\n    sign1 = sign1 + 2 * up;\n    if (sign1 > 1) sign1 = 1;\n    if (sign1 < -1) sign1 = -1;\n    var setAttr = device.signQuad;\n    setAttr.value = sign1;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nfunction gain1(up)\n{\n    var gain1 = Number($('#gain1').html());\n    gain1 = gain1 + up;\n    if (gain1 > 4) gain1 = 4;\n    if (gain1 < -4) gain1 = -4;\n    var setAttr = device.gainQuad;\n    setAttr.value = gain1;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nfunction timeOffset1(up)\n{\n    var timeOffset1 = Number($('#timeOffset1').html());\n    timeOffset1 = timeOffset1 + up;\n    if (timeOffset1 > 20) timeOffset1 = 20;\n    if (timeOffset1 < 1) timeOffset1 = 1;\n    var setAttr = device.filterQuad;\n    setAttr.value = timeOffset1;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n}\nvar maxAcValue1Changed = false;\nfunction maxAcValue1Change()\n{\n    maxAcValue1Changed = true;\n    $('#maxAcValue1Button').prop('disabled', false);\n \n}\nfunction maxAcValue1()\n{\n    $('#maxAcValue1Button').prop('disabled', true);\n    if (isNaN($('#maxAcValue1').val()))\n    {\n        maxAcValue1Changed = false;\n        return;\n    }\n    var maxAcValue1 = Number($('#maxAcValue1').val());\n    var setAttr = device.maxAcQuad;\n    setAttr.value = maxAcValue1;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n    maxAcValue1Changed = false;\n}\nvar dacOffset1Changed = false;\nfunction dacOffset1Change()\n{\n    dacOffset1Changed = true;\n    $('#dacOffset1Button').prop('disabled', false);\n \n}\nfunction dacOffset1()\n{\n    $('#dacOffset1Button').prop('disabled', true);\n    if (isNaN($('#dacOffset1').val()))\n    {\n        dacOffset1Changed = false;\n        return;\n    }\n    var dacOffset1 = Number($('#dacOffset1').val());\n    var setAttr = device.offsetQuad;\n    setAttr.value = dacOffset1;\n    var mqttMessage = \n    {\n        topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n        payload :  device\n    };\n    checkLogin(sendSettingToMqtt, mqttMessage);\n    dacOffset1Changed = false;\n}\nfunction updateQuadReadings()\n{\n    $('#chanOn1').text(device.onQuad.value.toString());\n    $('#sign1').text(device.signQuad.value.toString());\n    $('#gain1').text(device.gainQuad.value.toString());\n    $('#timeOffset1').text(device.filterQuad.value.toString());\n    if (!$('#maxAcValue1').is(':focus') && !maxAcValue1Changed) $('#maxAcValue1').val(device.maxAcQuad.value.toString());\n    if (!$('#dacOffset1').is(':focus')  && !dacOffset1Changed)  $('#dacOffset1').val(device.offsetQuad.value.toString());\n}\n",
        "output": "str",
        "x": 610,
        "y": 740,
        "wires": [
            [
                "89701bdf.c255a8"
            ]
        ]
    },
    {
        "id": "89701bdf.c255a8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.dipole}}}\n{{{payload.script.quad}}}\n",
        "output": "str",
        "x": 600,
        "y": 780,
        "wires": [
            [
                "f1035634.bbe518"
            ]
        ]
    },
    {
        "id": "3aa5e719.b02118",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'mode-0-damper';\nvar name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = 'mode-0-damper';\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 620,
        "wires": [
            [
                "98d29056.75985"
            ]
        ]
    },
    {
        "id": "98d29056.75985",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title 1",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Mode 0 Damper {{{payload.script.name}}}",
        "output": "str",
        "x": 270,
        "y": 660,
        "wires": [
            [
                "9d2c767f.1973d8"
            ]
        ]
    },
    {
        "id": "9d2c767f.1973d8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "balance.png",
        "output": "str",
        "x": 290,
        "y": 700,
        "wires": [
            [
                "ab67f445.20d7d8"
            ]
        ]
    },
    {
        "id": "a6703347.773f3",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1140,
        "y": 740,
        "wires": []
    },
    {
        "id": "85093dfd.6843f",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "insertOne",
        "x": 740,
        "y": 800,
        "wires": [
            [
                "3a6be28.491e91e"
            ]
        ]
    },
    {
        "id": "3a6be28.491e91e",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "aed83051.41098",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "projectName",
        "topic": "projectName",
        "payload": "PROJECT",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "8f1b3445.3cbe08"
            ]
        ]
    },
    {
        "id": "8f1b3445.3cbe08",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Project Name",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "fe529bbf.24cc38",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "settingsPassword",
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 170,
        "y": 320,
        "wires": [
            [
                "8b66fff4.d36a2"
            ]
        ]
    },
    {
        "id": "8b66fff4.d36a2",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save Settings Password",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7c045a12.e40564",
        "type": "comment",
        "z": "e17f7487.2a78e8",
        "name": "Careful - changes database!",
        "info": "",
        "x": 180,
        "y": 740,
        "wires": []
    },
    {
        "id": "42f0eb6b.e17954",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "Prune every 2 hours",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "15348658.6b1bfa"
            ]
        ]
    },
    {
        "id": "15348658.6b1bfa",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "stats",
        "x": 410,
        "y": 440,
        "wires": [
            [
                "24064b49.eddba4"
            ]
        ]
    },
    {
        "id": "95ba7d85.66bc3",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "find.toArray",
        "x": 950,
        "y": 440,
        "wires": [
            [
                "8095aa62.d2f348"
            ]
        ]
    },
    {
        "id": "24064b49.eddba4",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Number of Records to cut",
        "func": "var maxDbSize = global.get('maxDbSize');\nif (maxDbSize == undefined) return null;\nif (msg.payload.size < maxDbSize) return null;\nvar cutRecords = Math.round( (msg.payload.size - 0.9 * maxDbSize) / msg.payload.avgObjSize);\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{},{projection:{timeStamp:1, _id:0}}],\n    cutRecords      : cutRecords\n};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 440,
        "wires": [
            [
                "95ba7d85.66bc3"
            ]
        ]
    },
    {
        "id": "8095aa62.d2f348",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find latest Time Stamp",
        "func": "function objectLength( object ) {\n    var length = 0;\n    for( var key in object ) {\n        if( object.hasOwnProperty(key) ) {\n            ++length;\n        }\n    }\n    return length;\n}\nvar numDevices = objectLength(msg.payload);\nvar timeStampList = [];\n\nfor (var idevice = 0; idevice < numDevices; ++idevice)\n{\n    timeStampList[idevice] = msg.payload[idevice].timeStamp;\n}\ntimeStampList.sort();\n\n\nvar newMsg = \n{\n    topic           : 'test',\n    payload         : [{timeStamp: {\"$lte\": timeStampList[msg.cutRecords]}},{projection:{timeStamp:1, _id:0}}],\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 500,
        "wires": [
            [
                "b456a221.d5cc2"
            ]
        ]
    },
    {
        "id": "b456a221.d5cc2",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 950,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "74079082.14fd8",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "maxDbSize",
        "topic": "maxDbSize",
        "payload": "MAXDBSIZE",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 380,
        "wires": [
            [
                "c1115602.bef7c8"
            ]
        ]
    },
    {
        "id": "c1115602.bef7c8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Save maxDbSize",
        "func": "global.set(msg.topic,Number(msg.payload));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c5a47ee1.a0213",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 620,
        "wires": [
            [
                "8abbe11c.92db4"
            ]
        ]
    },
    {
        "id": "8abbe11c.92db4",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Find Device Type",
        "func": "var newMsg = \n{\n    topic           : 'test',\n    payload         : {deviceType: 'vad-kul'},\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 620,
        "wires": [
            [
                "c248cd33.d028f"
            ]
        ]
    },
    {
        "id": "d13a393c.79c898",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "archiver",
        "operation": "removeMany",
        "x": 550,
        "y": 680,
        "wires": [
            [
                "79fc27.158943d8"
            ]
        ]
    },
    {
        "id": "c248cd33.d028f",
        "type": "mongodb3 in",
        "z": "e17f7487.2a78e8",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "find.toArray",
        "x": 550,
        "y": 620,
        "wires": [
            [
                "79fc27.158943d8"
            ]
        ]
    },
    {
        "id": "79fc27.158943d8",
        "type": "debug",
        "z": "e17f7487.2a78e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 620,
        "wires": []
    },
    {
        "id": "321d583.1de93a8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Create r3-rfct Database entry",
        "func": "var device = \n{\n  \"deviceType\": \"rfct\",\n  \"name\": \"r3\",\n  \"arcPeriod\": 20000,\n  \"timeStamp\": 1574792656599,\n  \"lastArchive\": 1574792656599,\n  \"rawI\" :  {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 3978.9,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 0,\n          \"low\": 0,\n          \"high\": 4100,\n          \"hihi\": 4200\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"rawQ\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 1132.3,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 0,\n          \"low\": 0,\n          \"high\": 4100,\n          \"hihi\": 4200\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"procI\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 2079.2,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -2200,\n          \"low\": -2100,\n          \"high\": 2100,\n          \"hihi\": 2200\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"procQ\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": -901.8,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -2200,\n          \"low\": -2100,\n          \"high\": 4100,\n          \"hihi\": 4200\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"beamCurrent\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 232.57,\n      \"unit\": \"mA\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -0.5,\n          \"high\": 260,\n          \"hihi\": 300\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"DACCount\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 1443.3,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -0.5,\n          \"high\": 4100,\n          \"hihi\": 4200\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"DACVolts\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 1.163,\n      \"unit\": \"Volts\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -0.5,\n          \"high\": 3.2,\n          \"hihi\": 3.3\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"linkQuality\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 50,\n      \"unit\": \"/70\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 30,\n          \"low\": 40,\n          \"high\": 71,\n          \"hihi\": 80\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"signalLevel\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": -60,\n      \"unit\": \"dBm\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -70,\n          \"low\": -60,\n          \"high\": 0,\n          \"hihi\": 30\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"lifetime\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 10.57,\n      \"unit\": \"hours\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 0,\n          \"low\": 0,\n          \"high\": 1000,\n          \"hihi\": 1001\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"avgDayCurrent\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 15.519,\n      \"unit\": \"mA\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 0,\n          \"low\": 0,\n          \"high\": 300,\n          \"hihi\": 301\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"currentRate\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": -0.416,\n      \"unit\": \"mA/min\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -101,\n          \"low\": -100,\n          \"high\": 100,\n          \"hihi\": 101\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"numSamples\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 400,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 1,\n          \"low\": 10,\n          \"high\": 1000,\n          \"hihi\": 2000\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"rawIOffset\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 1944.5,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 1000,\n          \"low\": 1100,\n          \"high\": 2900,\n          \"hihi\": 3000\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"rawQOffset\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 2054,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 1000,\n          \"low\": 1100,\n          \"high\": 2900,\n          \"hihi\": 3000\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"gainDif\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 1.022,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 0.5,\n          \"low\": 0.7,\n          \"high\": 1.5,\n          \"hihi\": 2\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"mAToADC\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 0.10598,\n      \"unit\": \"mA\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 0,\n          \"low\": 0.01,\n          \"high\": 1,\n          \"hihi\": 2\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"DACTomA\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 6.206,\n      \"unit\": \"mA-1\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 0,\n          \"low\": 0.01,\n          \"high\": 10,\n          \"hihi\": 15\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"lifeTimeDeltaT\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 50,\n      \"unit\": \"min\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 1,\n          \"low\": 2,\n          \"high\": 3600,\n          \"hihi\": 3601\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"minCurrent\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 2,\n      \"unit\": \"mA\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 1,\n          \"low\": 2,\n          \"high\": 300,\n          \"hihi\": 301\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    }\n};\nreturn {topic:'rfct-r3',payload:device};",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "55f8d4ad.ec006c",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Create r3-osc-over Database entry",
        "func": "var device = \n{\n  \"deviceType\": \"osc-over\",\n  \"name\": \"r3\",\n  \"arcPeriod\": 60000,\n  \"timeStamp\": 1569048020585,\n  \"lastArchive\": 1569047994606,\n    \"beamCurrent\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 241.26,\n      \"unit\": \"mA\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 300,\n          \"hihi\": 300\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"maxDipoleMode\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 59,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 300,\n          \"hihi\": 300\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"avgPhase\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 202.68,\n      \"unit\": \"deg\",\n      \"alarm\": {\n        \"value\": 4,\n        \"limits\": {\n          \"lolo\": -180,\n          \"low\": -180,\n          \"high\": 180,\n          \"hihi\": 180\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"maxDipoleModeAmp\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 11.67,\n      \"unit\": \"deg\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 100,\n          \"hihi\": 100\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"rmsModeAmp\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 17.3,\n      \"unit\": \"deg\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 100,\n          \"hihi\": 100\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"avgMag\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 1.3708051440047941,\n      \"unit\": \"mA\",\n      \"alarm\": {\n        \"value\": 4,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 0.2,\n          \"hihi\": 0.2\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"phaseShiftQ\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": -0.0009,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 300,\n          \"hihi\": 300\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"modeM\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"bunchCurrent\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"difPhase\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"phase\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"bunchLength\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"peakBunchCurrent\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"trace1\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"trace2\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"trace3\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"trace4\" : {\n      \"action\": 'reading',\n      \"type\": \"vector\",\n      \"value\": [[],[]]\n    },\n    \"linkQuality\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": 56,\n      \"unit\": \"/70\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": 30,\n          \"low\": 40,\n          \"high\": 71,\n          \"hihi\": 80\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"signalLevel\" : {\n      \"action\": 'reading',\n      \"type\": \"scalar\",\n      \"value\": -54,\n      \"unit\": \"dBm\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -70,\n          \"low\": -60,\n          \"high\": 0,\n          \"hihi\": 30\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"modeDisplayA\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 0,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 89,\n          \"hihi\": 89\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"modeDisplayB\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 1,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 89,\n          \"hihi\": 89\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"modeDisplayC\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 11,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 89,\n          \"hihi\": 89\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    },\n    \"modeDisplayD\" : {\n      \"action\": 'setting',\n      \"type\": \"scalar\",\n      \"value\": 59,\n      \"unit\": \"unit\",\n      \"alarm\": {\n        \"value\": 0,\n        \"limits\": {\n          \"lolo\": -1,\n          \"low\": -1,\n          \"high\": 89,\n          \"hihi\": 89\n        },\n        \"notify\": {\n          \"name\": \"\",\n          \"number\": \"\",\n          \"time\": 0\n        }\n      }\n    }\n};\nreturn {topic:'osc-over',payload:device};",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 840,
        "wires": [
            [
                "85093dfd.6843f"
            ]
        ]
    },
    {
        "id": "73699c4b.ee0294",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Create mode-0-damper Database entry",
        "func": "var device = \n{\n    name         : 'r3',\n    deviceType   : \"mode-0-damper\",\n    arcPeriod    : 60000,\n    timeStamp    : 0,\n    lastArchive  : 0,\n    linkQuality  : { action : 'reading', type : 'scalar',    value : 0,      unit : '/70',     alarm : {value : 0, limits: {lolo :  30,  low : 40,     high : 71,       hihi : 80   }, notify:{name:'', number:'', time:0} } },\n    signalLevel  : { action : 'reading', type : 'scalar',    value : 0,      unit : 'dBm',     alarm : {value : 0, limits: {lolo : -70,  low : -60,    high : 0,        hihi : 30   }, notify:{name:'', number:'', time:0} } },\n    maxAcDipole  : { action : 'setting', type : 'scalar',    value : 50,     unit : 'unit',    alarm : {value : 0, limits: {lolo : 0,    low : 0,    high : 1024,    hihi : 1024}, notify:{name:'', number:'', time:0} } },\n    maxAcQuad    : { action : 'setting', type : 'scalar',    value : 50,     unit : 'unit',    alarm : {value : 0, limits: {lolo : 0,    low : 0,    high : 1024,    hihi : 1024}, notify:{name:'', number:'', time:0} } },\n    offsetDipole : { action : 'setting', type : 'scalar',    value : 555,    unit : 'unit',    alarm : {value : 0, limits: {lolo : 0,    low : 0,    high : 1024,    hihi : 1024}, notify:{name:'', number:'', time:0} } },\n    offsetQuad   : { action : 'setting', type : 'scalar',    value : 455,    unit : 'unit',    alarm : {value : 0, limits: {lolo : 0,    low : 0,    high : 1024,    hihi : 1024}, notify:{name:'', number:'', time:0} } },\n    onDipole     : { action : 'setting', type : 'scalar',    value : 1,      unit : 'unit',    alarm : {value : 0, limits: {lolo : -1,   low : -1,   high : 2,       hihi : 2   }, notify:{name:'', number:'', time:0} } },\n    onQuad       : { action : 'setting', type : 'scalar',    value : 0,      unit : 'unit',    alarm : {value : 0, limits: {lolo : -1,   low : -1,   high : 2,       hihi : 2   }, notify:{name:'', number:'', time:0} } },\n    signDipole   : { action : 'setting', type : 'scalar',    value : 1,      unit : 'unit',    alarm : {value : 0, limits: {lolo : -2,   low : -2,   high : 2,       hihi : 2   }, notify:{name:'', number:'', time:0} } },\n    signQuad     : { action : 'setting', type : 'scalar',    value : -1,     unit : 'unit',    alarm : {value : 0, limits: {lolo : -2,   low : -2,   high : 2,       hihi : 2   }, notify:{name:'', number:'', time:0} } },\n    gainDipole   : { action : 'setting', type : 'scalar',    value : 2,      unit : 'unit',    alarm : {value : 0, limits: {lolo : -8,   low : -8,   high : 8,       hihi : 8   }, notify:{name:'', number:'', time:0} } },\n    gainQuad     : { action : 'setting', type : 'scalar',    value : 1,      unit : 'unit',    alarm : {value : 0, limits: {lolo : -8,   low : -8,   high : 8,       hihi : 8   }, notify:{name:'', number:'', time:0} } },\n    filterDipole : { action : 'setting', type : 'scalar',    value : 18,     unit : 'unit',    alarm : {value : 0, limits: {lolo : 1,    low : 1,    high : 20,      hihi : 20  }, notify:{name:'', number:'', time:0} } },\n    filterQuad   : { action : 'setting', type : 'scalar',    value : 9,      unit : 'unit',    alarm : {value : 0, limits: {lolo : 1,    low : 1,    high : 20,      hihi : 20  }, notify:{name:'', number:'', time:0} } },\n};\nreturn {topic:'mode-0-damper',payload:device};",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "2dc98e17.83e1b2",
        "type": "inject",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 800,
        "wires": [
            [
                "55f8d4ad.ec006c"
            ]
        ]
    },
    {
        "id": "7e07a0b0.11e4c",
        "type": "http in",
        "z": "90f83725.6dae08",
        "name": "/setdevice",
        "url": "/setdevice",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "3a4d2725.aabf18"
            ]
        ]
    },
    {
        "id": "f93bde77.dafef",
        "type": "debug",
        "z": "90f83725.6dae08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fdbdf4ad.1a6488",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1160,
        "wires": []
    },
    {
        "id": "3a4d2725.aabf18",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Prep query",
        "func": "if (!msg.payload.hasOwnProperty('deviceType'))\n{\n    msg.payload = 'deviceType not defined\\n';\n    return [null,msg];\n}\nif (!msg.payload.hasOwnProperty('name'))\n{\n    msg.payload = 'name not defined\\n';\n    return [null,msg];\n}\nif (!msg.payload.hasOwnProperty('attr'))\n{\n    msg.payload = 'attr not defined\\n';\n    return [null,msg];\n}\nif (!msg.payload.hasOwnProperty('value'))\n{\n    msg.payload = 'value not defined\\n';\n    return [null,msg];\n}\nif (!msg.payload.hasOwnProperty('password'))\n{\n    msg.payload = 'password not defined\\n';\n    return [null,msg];\n}\nif (msg.payload.password != global.get('settingsPassword'))\n{\n    msg.payload = 'wrong password\\n';\n    return [null,msg];\n}\nvar queryMsg = \n[\n    {\n        $and    :\n        [\n            {\n                deviceType  :   msg.payload.deviceType\n            },\n            {\n                name        :   msg.payload.name\n            }\n        ]\n    },\n    {\n        projection: \n        {\n            _id :   0\n        }\n    }\n];\nvar inputData = JSON.parse(JSON.stringify(msg.payload));\nmsg.payload = queryMsg;\nmsg['inputData'] = inputData;\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "x": 290,
        "y": 1180,
        "wires": [
            [
                "39b56790.faafd8"
            ],
            [
                "4d066955.3cda58"
            ]
        ]
    },
    {
        "id": "39b56790.faafd8",
        "type": "mongodb3 in",
        "z": "90f83725.6dae08",
        "service": "_ext_",
        "configNode": "9cd5ff5e.caf86",
        "name": "",
        "collection": "devices",
        "operation": "findOne",
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "c442b6c0.82a7f8"
            ]
        ]
    },
    {
        "id": "c442b6c0.82a7f8",
        "type": "function",
        "z": "90f83725.6dae08",
        "name": "Settings Check",
        "func": "var device = null;\nif (isEmpty(msg.payload))\n{\n    msg.payload = 'device not found\\n';\n    return [msg,null];\n}\nelse\n{\n    device = JSON.parse(JSON.stringify(msg.payload));\n}\nif (!device.hasOwnProperty(msg.inputData.attr))\n{\n    msg.payload = 'attr not found\\n';\n    return [msg,null];\n}\nif (device[msg.inputData.attr].action != 'setting')\n{\n    msg.payload = 'Not a setting\\n';\n    return [msg,null];\n}\nvar settingValue = msg.inputData.value;\nif (device[msg.inputData.attr].type == 'scalar') settingValue = Number(settingValue);\ndevice[msg.inputData.attr].value = settingValue;\nmsg.payload = 'Success!\\n';\nvar topic = global.get('projectName') + '/' + device.deviceType + '/' + device.name + '/setting';\nreturn [msg,{topic:topic,payload:device}];\nfunction isEmpty(obj) \n{\n    for(var prop in obj) \n    {\n        if(obj.hasOwnProperty(prop))\n            return false;\n    }\n\n    return true;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 730,
        "y": 1180,
        "wires": [
            [
                "fdbdf4ad.1a6488"
            ],
            [
                "f93bde77.dafef",
                "fe7c82bb.c7fb5"
            ]
        ]
    },
    {
        "id": "4d066955.3cda58",
        "type": "http response",
        "z": "90f83725.6dae08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 450,
        "y": 1240,
        "wires": []
    },
    {
        "id": "fe7c82bb.c7fb5",
        "type": "mqtt out",
        "z": "90f83725.6dae08",
        "name": "Publish Setting",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 960,
        "y": 1280,
        "wires": []
    },
    {
        "id": "57734844.4203c8",
        "type": "http in",
        "z": "9c854ea3.68416",
        "name": "/rfill",
        "url": "/rfill",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 880,
        "wires": [
            [
                "43d83811.56e618"
            ]
        ]
    },
    {
        "id": "c8e1f59a.627968",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var plotStart = new Date();\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n            acknowledgeDialog('Alert', 'Wait!', 'Contacting the Mother Ship...');\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n\n        function updateDmaReadings()\n        {\n            phasePlot();\n            modePlot();\n            bunchPlot();\n            dataGlobal();\n            $( \"#acknowledgeDialog\" ).dialog('close');\n        }\n        function dataGlobal()\n        {\n            $(\"#beamCurrent\").text(Math.round(device.beamCurrent.value * 100.0) / 100.0);\n        }\n        function phasePlot()\n        {\n            var layout =\n            {   \n                title: 'Phase',\n                showlegend: false,\n                xaxis: {title: 'Bunch Number'},\n                yaxis: {title: 'phase (pS)'},\n            };\n            var traceData = [{}];\n            var phase = device.phase.value;\n            traceData[0] = {x: [],y: [],name: 'phase', yaxis: 'y1',type: 'bar',marker: {color: '#575491'}};\n            for (var ii = 0; ii < phase[0].length; ++ii)\n            {\n                traceData[0].x[ii] = phase[0][ii];\n                traceData[0].y[ii] = phase[1][ii];\n            }\n            Plotly.newPlot('phasePlot', traceData, layout);\n        }\n        function modePlot()\n        {\n            var layout =\n            {   \n                title: 'Mode Spectrum',\n                xaxis: {title: 'Mode Number'},\n                yaxis: {title: 'Amplitude (pS)'},\n            };\n            var modeM = device.modeM.value;\n            var traceData = [{}];\n            traceData[0] = {x: [],y: [],name: 'mode', yaxis: 'y1',type: 'bar',marker: {color: '#575491'}};\n            for (var ii = 0; ii < modeM[0].length; ++ii)\n            {\n                traceData[0].x[ii] = modeM[0][ii];\n                traceData[0].y[ii] = modeM[1][ii];\n            }\n            Plotly.newPlot('modePlot', traceData, layout);\n        }\n        function bunchPlot()\n        {\n            var layout =\n            {   \n                title: 'Bunch Intensity',\n                showlegend: false,\n                xaxis: {title: 'Bunch Number'},\n                yaxis: {title: 'Bunch Current (mA)'},\n            };\n            var bunchCurrent = device.bunchCurrent.value;\n            var traceData = [{}];\n            traceData[0] = {x: [],y: [],name: 'bunch Intensity', yaxis: 'y1',type: 'bar',marker: {color: '#575491'}};\n            for (var ii = 0; ii < bunchCurrent[0].length; ++ii)\n            {\n                traceData[0].x[ii] = bunchCurrent[0][ii];\n                traceData[0].y[ii] = bunchCurrent[1][ii];\n            }\n            Plotly.newPlot('bunchPlot', traceData, layout);\n        }\n",
        "output": "str",
        "x": 730,
        "y": 880,
        "wires": [
            [
                "972d1211.e8935"
            ]
        ]
    },
    {
        "id": "972d1211.e8935",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width='100%' style='padding-bottom: 25px;'>\n        <div class='card'>\n            <table width='100%'>\n                <tr>\n                    <td width='60%' align=\"left\">\n                        <span class=\"card-title\">Beam current (mA)</span>\n                    </td>\n                    <td width='40%' align=\"right\">\n                        <span class=\"card-title\" id=\"beamCurrent\"></span>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Bunch Intensity</p>\n            <div class='card-body'>\n                <div id=\"bunchPlot\"></div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Mode Spectrum</p>\n            <div class='card-body'>\n                <div id=\"modePlot\"></div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom: 25px;'>\n        <div class='card'>\n            <p class='card-title'>Phase</p>\n            <div class='card-body'>\n                <div id=\"phasePlot\"></div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 870,
        "y": 880,
        "wires": [
            [
                "f3c21798.fb8ef8"
            ]
        ]
    },
    {
        "id": "87e2f5b0.d498f8",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "R3 Fill Pattern\n",
        "output": "str",
        "x": 430,
        "y": 880,
        "wires": [
            [
                "b8575551.791e08"
            ]
        ]
    },
    {
        "id": "b8575551.791e08",
        "type": "template",
        "z": "9c854ea3.68416",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "bucketYellow.png",
        "output": "str",
        "x": 570,
        "y": 880,
        "wires": [
            [
                "c8e1f59a.627968"
            ]
        ]
    },
    {
        "id": "f3c21798.fb8ef8",
        "type": "subflow:8341090a.df9758",
        "z": "9c854ea3.68416",
        "name": "",
        "x": 1140,
        "y": 880,
        "wires": []
    },
    {
        "id": "43d83811.56e618",
        "type": "function",
        "z": "9c854ea3.68416",
        "name": "Get Name",
        "func": "var deviceType = 'osc-over';\nvar name = msg.payload.name;\nmsg.payload = {};\nmsg.payload['script'] = {};\nmsg.payload['script']['name'] = name;\nmsg.payload['script']['deviceType'] = deviceType;\nmsg.payload['script']['project'] = global.get('projectName');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 880,
        "wires": [
            [
                "87e2f5b0.d498f8"
            ]
        ]
    },
    {
        "id": "59b5ee6d.fe5d7",
        "type": "websocket out",
        "z": "8475ab9.3d26058",
        "name": "/rfill/websocket",
        "server": "7efb4916.1a4cc8",
        "client": "",
        "x": 1160,
        "y": 240,
        "wires": []
    },
    {
        "id": "807f098e.c2d9c8",
        "type": "link in",
        "z": "8475ab9.3d26058",
        "name": "r3fill in",
        "links": [
            "9d4bada0.71b3b"
        ],
        "x": 1035,
        "y": 240,
        "wires": [
            [
                "59b5ee6d.fe5d7"
            ]
        ]
    }
]